{"version":3,"file":"static/js/5295.e7c113b9.chunk.js","mappings":"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","sources":["coordinators/coordinators.tsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { CoordinatorsQuery, CoordinatorDelete } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport { Order, Coordinator } from '../utils/dataTypes';\r\nimport { getType, getPath } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Coordinator;\r\n  getData: (row: Coordinator) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'fullName',\r\n    orderField: 'fullName',\r\n    getData: (row) => ({ data: `${row.fullName}` }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'First name/Last name',\r\n  },\r\n  {\r\n    id: 'type',\r\n    getData: (row) => {\r\n      const type = `${getType(row)} `;\r\n      let title = '';\r\n      if (row.type === 'Coordinator') {\r\n        title = 'Coordinator';\r\n      }\r\n      if (row.type === 'CoordinatorDriver') {\r\n        title = 'Coordinator/Driver';\r\n      }\r\n      return {\r\n        data: (\r\n          <span>\r\n            <b>{type}</b>\r\n          </span>\r\n        ),\r\n        title: title,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Type',\r\n  },\r\n  {\r\n    id: 'phone',\r\n    getData: (row) => {\r\n      const firstRow = `${row.phone}`;\r\n      const secondRow = `${row.phone2 ? row.phone2 : ''}`;\r\n      return {\r\n        data: (\r\n          <span>\r\n            <a\r\n              href={`tel:${firstRow}`}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n            <br />\r\n            <a\r\n              href={secondRow ? `tel:${secondRow}` : undefined}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {secondRow || ' '}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Mobile phone',\r\n  },\r\n  {\r\n    id: 'email',\r\n    getData: (row) => {\r\n      const firstRow = `${row.email}`;\r\n      return {\r\n        data: (\r\n          <span>\r\n            <a\r\n              href={`mailto:${firstRow}`}\r\n              target=\"_blank\"\r\n              onClick={stopPropagation}\r\n            >\r\n              {firstRow}\r\n            </a>\r\n          </span>\r\n        ),\r\n        title: firstRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Email',\r\n  },\r\n  {\r\n    id: 'address',\r\n    getData: (row) => {\r\n      const firstRow = `${row.address}`;\r\n      return {\r\n        data: <span>{firstRow}</span>,\r\n        title: firstRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Home address',\r\n  },\r\n  {\r\n    id: 'coordinateTrucks',\r\n    getData: (row) => {\r\n      if (row.coordinateTrucks && row.coordinateTrucks.length) {\r\n        const trucks = row.coordinateTrucks;\r\n        return {\r\n          data: (\r\n            <span>\r\n              {trucks.map((truck, index) => (\r\n                <a\r\n                  key={index}\r\n                  href={`/trucks/view/${truck.id}`}\r\n                  target=\"_blank\"\r\n                  onClick={stopPropagation}\r\n                >\r\n                  {`${truck.truckNumber}${\r\n                    index === trucks.length - 1 ? '' : ', '\r\n                  }`}\r\n                </a>\r\n              ))}\r\n            </span>\r\n          ),\r\n          title: trucks.map((truck) => truck.truckNumber).join(', '),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'COORDINATE TRUCKS',\r\n  },\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Coordinator,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)((/*{ theme }*/) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Coordinator) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            name={'enhanced-table-checkbox-select-all'}\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'enhanced-table-checkbox-select-all',\r\n            }}\r\n          />\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  const [createDialogOpen, setCreateDialogOpen] =\r\n    React.useState<boolean>(false);\r\n  const [fullNameSearch, setFullNameSearch] = React.useState<string>('');\r\n  const [truckNumberSearch, setTruckNumberSearch] = React.useState<number>(0);\r\n  const [searchChanged, setSearchChanged] = React.useState<boolean>(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(CoordinatorDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['coordinators']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const fullNameHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFullNameSearch(event.target.value);\r\n    setSearchChanged(true);\r\n  };\r\n  const truckNumberHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (Number.isFinite(Number(event.target.value))) {\r\n      setTruckNumberSearch(Number(event.target.value));\r\n      setSearchChanged(true);\r\n    }\r\n  };\r\n  const filterClearHandler = () => {\r\n    setSearchChanged(false);\r\n    setFullNameSearch('');\r\n    setTruckNumberSearch(0);\r\n    setQueryParams({});\r\n  };\r\n  const filterHandler = () => {\r\n    setSearchChanged(false);\r\n    const queryParams: Record<string, number | string> = {};\r\n    if (fullNameSearch) {\r\n      queryParams.fullName = fullNameSearch;\r\n    }\r\n    if (truckNumberSearch) {\r\n      queryParams.truckNumber = truckNumberSearch;\r\n    }\r\n    setQueryParams(queryParams);\r\n  };\r\n  const keyUpHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (fullNameSearch || truckNumberSearch) {\r\n      filterHandler();\r\n    } else {\r\n      filterClearHandler();\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    setCreateDialogOpen(true);\r\n  };\r\n  const handleCloseCreateDialog = () => {\r\n    setCreateDialogOpen(false);\r\n  };\r\n  const editHandler = () => {\r\n    navigate(`./edit/${selected[0]}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n  const deleteHandler = () => {\r\n    mutate(`${selected[0]}`);\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Coordinators\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"First name/Last name\"\r\n          value={fullNameSearch}\r\n          onChange={fullNameHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Truck Number\"\r\n          value={truckNumberSearch || ''}\r\n          onChange={truckNumberHandler}\r\n          onKeyUp={keyUpHandler}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {(searchChanged || (!fullNameSearch && !truckNumberSearch)) &&\r\n        (!(searchChanged && !fullNameSearch) ||\r\n          !(searchChanged && !truckNumberSearch)) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={!fullNameSearch && !truckNumberSearch}\r\n              onClick={filterHandler}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={filterClearHandler}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Box sx={{ p: 1, display: 'inline-flex' }}>\r\n        <Tooltip title=\"Create\">\r\n          <span>\r\n            <IconButton onClick={createHandler}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <span>\r\n            <IconButton disabled={selected.length !== 1} onClick={editHandler}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <span>\r\n            <IconButton\r\n              disabled={selected.length !== 1}\r\n              onClick={deleteHandler}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      </Box>\r\n      <Dialog onClose={handleCloseCreateDialog} open={createDialogOpen}>\r\n        <DialogTitle>Select, what type of coordinator to create</DialogTitle>\r\n        <List sx={{ pt: 0 }}>\r\n          <ListItem disableGutters key=\"coordinator\">\r\n            <ListItemButton\r\n              onClick={() => {\r\n                navigate('../coordinators/create', {\r\n                  relative: 'path',\r\n                  state: { from: location },\r\n                  replace: false,\r\n                });\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ContactPhoneIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Coordinator\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem disableGutters key=\"coordinatorsDriver\">\r\n            <ListItemButton\r\n              onClick={() => {\r\n                navigate('../coordinatorsDrivers/create', {\r\n                  relative: 'path',\r\n                  state: { from: location },\r\n                  replace: false,\r\n                });\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <ContactPhoneIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Coordinator-Driver\" />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof Coordinator | undefined>(\r\n    'fullName',\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({});\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    error,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['coordinators', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: CoordinatorsQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });\r\n  React.useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    setSnackbarMessage({\r\n      severity: 'error',\r\n      message: error instanceof Error ? error.message : JSON.stringify(error),\r\n    });\r\n  }, [error]);\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Coordinator,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Coordinator) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`../${getPath(item)}/view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (event: React.MouseEvent<unknown>, name: string) => {\r\n    event.stopPropagation();\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: readonly string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        id={`${labelId}`}\r\n                        color=\"primary\"\r\n                        checked={isItemSelected}\r\n                        inputProps={{\r\n                          'aria-labelledby': labelId,\r\n                        }}\r\n                        onClick={(event) => handleSelect(event, `${row.id}`)}\r\n                      />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDialogTitleUtilityClass } from \"./dialogTitleClasses.js\";\nimport DialogContext from \"../Dialog/DialogContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n    className,\n    id: idProp,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, {\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp ?? titleId,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ListContext from \"../List/ListContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getListItemAvatarUtilityClass } from \"./listItemAvatarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})({\n  minWidth: 56,\n  flexShrink: 0,\n  variants: [{\n    props: {\n      alignItems: 'flex-start'\n    },\n    style: {\n      marginTop: 8\n    }\n  }]\n});\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const ownerState = {\n    ...props,\n    alignItems: context.alignItems\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;"],"names":["headCells","id","orderField","getData","row","data","concat","fullName","numeric","disablePadding","label","type","getType","title","_jsx","children","firstRow","phone","secondRow","phone2","_jsxs","href","target","onClick","stopPropagation","undefined","email","address","coordinateTrucks","length","trucks","map","truck","index","truckNumber","join","StyledTableHead","styled","TableHead","_ref","theme","backgroundColor","palette","background","default","StyledTableCell","TableCell","maxWidth","paddingTop","paddingBottom","whiteSpace","textOverflow","overflow","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableRow","padding","Checkbox","name","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","selected","setQueryParams","createDialogOpen","setCreateDialogOpen","React","fullNameSearch","setFullNameSearch","truckNumberSearch","setTruckNumberSearch","searchChanged","setSearchChanged","location","useLocation","navigate","useNavigate","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","mutate","isLoading","useMutation","CoordinatorDelete","onSuccess","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","filterClearHandler","filterHandler","queryParams","keyUpHandler","key","Toolbar","_objectSpread","pl","sm","pr","xs","bgcolor","alpha","primary","main","action","activatedOpacity","Typography","flex","variant","m","width","TextField","value","onKeyUp","size","Number","isFinite","Tooltip","IconButton","FilterListOffIcon","disabled","FilterListIcon","p","display","createHandler","AddIcon","editHandler","relative","state","from","replace","EditIcon","deleteHandler","DeleteIcon","Dialog","onClose","handleCloseCreateDialog","open","DialogTitle","List","pt","ListItem","disableGutters","ListItemButton","ListItemAvatar","Avatar","ContactPhoneIcon","ListItemText","Loader","visible","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","tableContainerRef","isFetching","items","total","useQuery","queryKey","queryFn","CoordinatorsQuery","keepPreviousData","retry","rows","current","scrollTo","top","left","behavior","newSelected","forEach","selectedItem","find","push","height","Paper","query","TableContainer","ref","Table","minWidth","stickyHeader","n","handleRequestSort","isAsc","TableBody","isItemSelected","indexOf","labelId","hover","onDoubleClick","handleClick","item","getPath","role","tabIndex","cursor","handleSelect","selectedIndex","slice","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","createSvgIcon","d","_excluded","DialogTitleRoot","slot","overridesResolver","styles","root","inProps","useDefaultProps","className","idProp","other","_objectWithoutProperties","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","titleId","DialogContext","clsx","getListItemAvatarUtilityClass","generateUtilityClass","generateUtilityClasses","ListItemAvatarRoot","alignItems","alignItemsFlexStart","flexShrink","variants","style","marginTop","context","ListContext","slots"],"sourceRoot":""}