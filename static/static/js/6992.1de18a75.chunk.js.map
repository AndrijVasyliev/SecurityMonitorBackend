{"version":3,"file":"static/js/6992.1de18a75.chunk.js","mappings":"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","sources":["trucks/createTruck.tsx","utils/dataTypes.ts"],"sourcesContent":["import React from 'react';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Person4Icon from '@mui/icons-material/Person4';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport BadgeIcon from '@mui/icons-material/Badge';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport {\r\n  Loader,\r\n  SearchField,\r\n  SelectField,\r\n  SelectMultiField,\r\n  TextField,\r\n} from '../components';\r\n\r\nimport {\r\n  OwnersQuery,\r\n  CoordinatorsQuery,\r\n  DriversQuery,\r\n  TruckCreate,\r\n} from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport {\r\n  Owner,\r\n  Coordinator,\r\n  Driver,\r\n  CreateTruck,\r\n  TruckCertificates,\r\n  TruckCrossborders,\r\n  TruckEquipments,\r\n  TruckStatuses,\r\n  TruckTypes,\r\n  TruckStatus,\r\n  TruckCrossborder,\r\n  TruckCertificate,\r\n  TruckType,\r\n  FormOnClose,\r\n} from '../utils/dataTypes';\r\nimport { getType } from '../utils/queryHelpers';\r\n\r\nconst validationSchema = yup.object({\r\n  truckNumber: yup\r\n    .number()\r\n    .integer()\r\n    .typeError('Truck Number must be a integer number')\r\n    .required('Truck Number is required'),\r\n  status: yup.string().oneOf(TruckStatuses).required('Status is required'),\r\n  crossborder: yup\r\n    .string()\r\n    .oneOf(TruckCrossborders)\r\n    .required('Crossborder is required'),\r\n  certificate: yup\r\n    .string()\r\n    .oneOf(TruckCertificates)\r\n    .required('Certificate is required'),\r\n  type: yup.string().oneOf(TruckTypes).required('Type is required'),\r\n  equipment: yup\r\n    .array(yup.string().oneOf(TruckEquipments))\r\n    .min(0)\r\n    .required('Equipment is required'),\r\n  payload: yup\r\n    .number()\r\n    .integer()\r\n    .typeError('Payload must be a integer number')\r\n    .required('Payload is required'),\r\n  grossWeight: yup.string().required('Gross Weight is required'),\r\n  make: yup.string().required('Make is required'),\r\n  model: yup.string().required('Model is required'),\r\n  year: yup\r\n    .number()\r\n    .integer()\r\n    .typeError('Year must be a integer number')\r\n    .required('Year is required'),\r\n  color: yup.string().required('Color is required'),\r\n  vinCode: yup.string().required('Vin Code is required'),\r\n  licencePlate: yup.string().required('Licence Plate is required'),\r\n  insideDims: yup.string().required('Inside Dims is required'),\r\n  doorDims: yup.string().required('Door Dims is required'),\r\n  owner: yup\r\n    .object({ id: yup.string().required() })\r\n    .required('Owner is required'),\r\n  coordinator: yup\r\n    .object({ id: yup.string().required() })\r\n    .typeError('Enter correct coordinator')\r\n    .nullable(),\r\n  driver: yup\r\n    .object({ id: yup.string().required() })\r\n    .typeError('Enter correct driver')\r\n    .nullable(),\r\n});\r\n\r\nconst initialValues = {\r\n  truckNumber: undefined,\r\n  status: 'Available' as TruckStatus,\r\n  crossborder: 'Yes' as TruckCrossborder,\r\n  certificate: 'Hazmat' as TruckCertificate,\r\n  type: 'Cargo van' as TruckType,\r\n  equipment: [],\r\n  payload: undefined,\r\n  grossWeight: undefined,\r\n  make: undefined,\r\n  model: undefined,\r\n  year: undefined,\r\n  color: undefined,\r\n  vinCode: undefined,\r\n  licencePlate: undefined,\r\n  insideDims: undefined,\r\n  doorDims: undefined,\r\n  owner: null,\r\n  coordinator: null,\r\n  driver: null,\r\n};\r\n\r\nexport default function CreateTruckForm({ onClose }: { onClose: FormOnClose }) {\r\n  const [driverAddQueryParams, setDriverAddQueryParams] = React.useState<\r\n    Record<string, string>\r\n  >({});\r\n  const [coordinatorAddQueryParams, setCoordinatorAddQueryParams] =\r\n    React.useState<Record<string, string>>({});\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(TruckCreate, {\r\n    onSuccess: (data) => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Created',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n      onClose('Create', data);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik<CreateTruck>({\r\n    initialValues,\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutate(values);\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (formik.values.owner) {\r\n      setDriverAddQueryParams({ owner: formik.values.owner.id });\r\n      setCoordinatorAddQueryParams({ owner: formik.values.owner.id });\r\n    } else {\r\n      formik.setFieldValue('driver', null, true);\r\n      formik.setFieldValue('coordinator', null, true);\r\n      setDriverAddQueryParams((prev) => (Object.keys(prev).length ? {} : prev));\r\n      setCoordinatorAddQueryParams((prev) =>\r\n        Object.keys(prev).length ? {} : prev,\r\n      );\r\n    }\r\n  }, [formik.values.owner]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      formik.values.coordinator &&\r\n      formik.values.coordinator.owner &&\r\n      formik.values.coordinator.id !==\r\n        (formik.values.owner && formik.values.owner.id)\r\n    ) {\r\n      formik.setFieldValue('owner', formik.values.coordinator.owner, true);\r\n    }\r\n  }, [formik.values.coordinator]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      formik.values.driver &&\r\n      formik.values.driver.owner &&\r\n      formik.values.driver.id !==\r\n        (formik.values.owner && formik.values.owner.id)\r\n    ) {\r\n      formik.setFieldValue('owner', formik.values.driver.owner, true);\r\n    }\r\n  }, [formik.values.driver]);\r\n\r\n  const handleClose = () => {\r\n    onClose('Close');\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: '100%' }}>\r\n      <form\r\n        onSubmit={formik.handleSubmit}\r\n        onReset={formik.handleReset}\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Box sx={{ p: 3, height: '100%' }}>\r\n          <Divider />\r\n          <Box\r\n            key=\"controls\"\r\n            sx={{\r\n              maxHeight: 'calc(100% - 70px)',\r\n              overflowX: 'hidden',\r\n              overflowY: 'scroll',\r\n            }}\r\n          >\r\n            <Box\r\n              key=\"centerControls\"\r\n              sx={{ display: 'inline-flex', width: '100%' }}\r\n            >\r\n              <Box key=\"left\" sx={{ p: 1, paddingBottom: 0, width: '50%' }}>\r\n                <TextField\r\n                  fieldName=\"truckNumber\"\r\n                  label=\"Truck Number\"\r\n                  number\r\n                  formik={formik}\r\n                />\r\n                <SelectField\r\n                  fieldName=\"crossborder\"\r\n                  label=\"Cross Border\"\r\n                  items={TruckCrossborders}\r\n                  formik={formik}\r\n                />\r\n                <SelectField\r\n                  fieldName=\"type\"\r\n                  label=\"Type\"\r\n                  items={TruckTypes}\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"payload\"\r\n                  label=\"Payload\"\r\n                  number\r\n                  formik={formik}\r\n                />\r\n                <TextField fieldName=\"make\" label=\"Make\" formik={formik} />\r\n                <TextField\r\n                  fieldName=\"year\"\r\n                  label=\"Year\"\r\n                  number\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"vinCode\"\r\n                  label=\"Vin Code\"\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"insideDims\"\r\n                  label=\"Inside Dims\"\r\n                  placeholder=\"length x width x height\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, paddingBottom: 0, width: '50%' }}>\r\n                <SelectField\r\n                  fieldName=\"status\"\r\n                  label=\"Status\"\r\n                  items={TruckStatuses}\r\n                  disabledItems={TruckStatuses.filter(\r\n                    (status) =>\r\n                      status !== 'Available' && status !== 'Not Available',\r\n                  )}\r\n                  formik={formik}\r\n                />\r\n                <SelectField\r\n                  fieldName=\"certificate\"\r\n                  label=\"Certificate\"\r\n                  items={TruckCertificates}\r\n                  formik={formik}\r\n                />\r\n                <SelectMultiField\r\n                  fieldName=\"equipment\"\r\n                  label=\"Equipment\"\r\n                  items={TruckEquipments}\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"grossWeight\"\r\n                  label=\"Gross Weight\"\r\n                  formik={formik}\r\n                />\r\n                <TextField fieldName=\"model\" label=\"Model\" formik={formik} />\r\n                <TextField fieldName=\"color\" label=\"Color\" formik={formik} />\r\n                <TextField\r\n                  fieldName=\"licencePlate\"\r\n                  label=\"Licence Plate\"\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"doorDims\"\r\n                  label=\"Door Dims\"\r\n                  placeholder=\"width x height\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              key=\"bottomControls\"\r\n              sx={{ p: 1, paddingBottom: 0, paddingTop: 0 }}\r\n            >\r\n              <SearchField<Owner>\r\n                fieldName=\"owner\"\r\n                label=\"Owner\"\r\n                getSelectedLabel={(selectedItem) =>\r\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\r\n                    selectedItem.phone\r\n                  }`\r\n                }\r\n                getItemLabel={(item) => `${item.fullName}`}\r\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\r\n                ListIcon={Person4Icon}\r\n                queryFn={OwnersQuery}\r\n                startEmpty={false}\r\n                orderby=\"fullName\"\r\n                order=\"asc\"\r\n                formik={formik}\r\n              />\r\n              <SearchField<Coordinator>\r\n                fieldName=\"coordinator\"\r\n                label=\"Coordinator\"\r\n                getSelectedLabel={(selectedItem) =>\r\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\r\n                    selectedItem.phone\r\n                  }`\r\n                }\r\n                getItemLabel={(item) => `${item.fullName}`}\r\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\r\n                ListIcon={ContactPhoneIcon}\r\n                queryFn={CoordinatorsQuery}\r\n                startEmpty={false}\r\n                orderby=\"fullName\"\r\n                order=\"asc\"\r\n                additionalQueryParams={coordinatorAddQueryParams}\r\n                formik={formik}\r\n              />\r\n              <SearchField<Driver>\r\n                fieldName=\"driver\"\r\n                label=\"Driver\"\r\n                getSelectedLabel={(selectedItem) =>\r\n                  `${selectedItem.fullName}, ${getType(selectedItem)}, ${\r\n                    selectedItem.phone\r\n                  }`\r\n                }\r\n                getItemLabel={(item) =>\r\n                  `${item.fullName}${\r\n                    item.driveTrucks && item.driveTrucks[0]\r\n                      ? ', On Truck: ' + item.driveTrucks[0].truckNumber\r\n                      : ''\r\n                  }`\r\n                }\r\n                getItemSecondLabel={(item) => `${getType(item)}, ${item.phone}`}\r\n                getOptionDisabled={(item) => !!item.driveTrucks?.length}\r\n                ListIcon={BadgeIcon}\r\n                queryFn={DriversQuery}\r\n                startEmpty={false}\r\n                orderby=\"fullName\"\r\n                order=\"asc\"\r\n                additionalQueryParams={driverAddQueryParams}\r\n                formik={formik}\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Divider />\r\n          <Box key=\"buttons\" sx={{ paddingTop: 3, display: 'flex' }}>\r\n            <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Create\r\n              </Button>\r\n            </Box>\r\n            <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n      <Loader visible={isLoading} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AlertColor } from '@mui/material/Alert/Alert';\r\n\r\nexport const EntityTypes = [\r\n  'Truck',\r\n  'Load',\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n  'Location',\r\n  'User',\r\n  'Customer',\r\n  'Facility',\r\n] as const;\r\n\r\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\r\n\r\nexport const PersonTypes = [\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n] as const;\r\n\r\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\r\n\r\nexport const CustomerTypes = [\r\n  'BROKER DOMESTIC',\r\n  'BROKER INTERNATIONAL',\r\n  'FREIGHT FORWARDER DOMESTIC',\r\n  'FREIGHT FORWARDER INTERNATIONAL',\r\n  'SHIPPER/CONSIGNEE DOMESTIC',\r\n  'SHIPPER/CONSIGNEE INTERNATIONAL',\r\n  'OTHER',\r\n] as const;\r\n\r\nexport const TruckTypes = [\r\n  'Cargo van',\r\n  'Reefer van',\r\n  'Box truck',\r\n  'Box truck Reefer',\r\n  'Straight truck',\r\n  'Hotshot',\r\n  'Tented box',\r\n] as const;\r\n\r\nexport const TruckStatuses = [\r\n  'Available',\r\n  'Not Available',\r\n  'Will be available',\r\n  'On route',\r\n] as const;\r\n\r\nexport const TruckCrossborders = ['Yes', 'No'] as const;\r\n\r\nexport const TruckCertificates = [\r\n  'Hazmat',\r\n  'Tsa',\r\n  'TWIC',\r\n  'Tanker Endorsement',\r\n] as const;\r\n\r\nexport const TruckEquipments = [\r\n  'Dock height risers',\r\n  'Air ride',\r\n  'Lift gate',\r\n  'Keep from freezing',\r\n  'ICC bar',\r\n  'Vertical E-track',\r\n  'Horizontal E-track',\r\n  'Pallet jack',\r\n  'PPE',\r\n  'Ramps',\r\n  'Straps',\r\n  'Loads bars',\r\n  'Blankets',\r\n  'Pads',\r\n  'Fire extinguisher',\r\n  'Metal hooks',\r\n  'Reefer',\r\n  'Heater',\r\n] as const;\r\n\r\nexport const LoadStatuses = [\r\n  'Available',\r\n  'Planned',\r\n  'In Progress',\r\n  'TONU',\r\n  'Cancelled',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const StopPickUpStatuses = [\r\n  'New',\r\n  'On route to PU',\r\n  'On site PU',\r\n  'Loaded, Waiting GTG',\r\n  'GTG',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const StopDeliveryStatuses = [\r\n  'New',\r\n  'On route to DEL',\r\n  'On site DEL',\r\n  'Unloaded, Waiting GTG',\r\n  'GTG',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const UnitsOfWeight = ['LBS', 'KG', 'TON'] as const;\r\n\r\nexport const UnitsOfLength = ['FT', 'IN', 'M', 'CM'] as const;\r\n\r\nexport const PUSH_STATES = [\r\n  'New',\r\n  'Ready for send',\r\n  'Processing send',\r\n  'Sent for deliver',\r\n  'Error sending',\r\n  'Ready for receiving receipt',\r\n  'Processing receiving receipt',\r\n  'Sent to user',\r\n  'Error from receipt',\r\n  'Error receiving receipt',\r\n] as const;\r\n\r\nexport const EMAIL_STATES = [\r\n  'New',\r\n  'Ready',\r\n  'Processing',\r\n  'Sent',\r\n  'Error',\r\n] as const;\r\n\r\nexport const EMAIL_TO_TYPES = ['User', 'Person'] as const;\r\n\r\nexport const FILE_OF_TYPES = ['Truck', 'Person', 'Load'] as const;\r\n\r\nexport type Order = 'asc' | 'desc';\r\nexport type QueryKey<T> = readonly [\r\n  key: string,\r\n  page: number,\r\n  rowsPerPage: number,\r\n  orderBy?: string,\r\n  order?: Order,\r\n  queryParams?: T,\r\n];\r\n// export type BaseQuery = {\r\n//   readonly queryKey: QueryKey;\r\n// };\r\nexport type Query<T> = {\r\n  readonly queryKey: QueryKey<T>;\r\n};\r\nexport type QuerySingleKey = readonly [key: string, recordId: string];\r\nexport type QuerySingle = {\r\n  readonly queryKey: QuerySingleKey;\r\n};\r\nexport type Result<T> = {\r\n  items: T[];\r\n  limit: number;\r\n  offset: number;\r\n  total: number;\r\n};\r\nexport type QueryFn<SearchType = any, ResultType = any> = (\r\n  query: Query<{ search: SearchType }>,\r\n) => Promise<Result<ResultType>>;\r\n\r\nexport type UserDataType = {\r\n  username: string;\r\n  password: string;\r\n} & Partial<User>;\r\nexport interface AuthContextType {\r\n  user: UserDataType | null;\r\n  signin: (\r\n    username: string,\r\n    password: string,\r\n    callback: (user: UserDataType | null) => void,\r\n  ) => void;\r\n  signout: (callback: VoidFunction) => void;\r\n}\r\nexport type SnackbarMessage = {\r\n  message: string;\r\n  severity: AlertColor;\r\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\r\n};\r\nexport type EntityType = (typeof EntityTypes)[number];\r\nexport type PersonType = (typeof PersonTypes)[number];\r\nexport type LangPriority = (typeof LangPriorities)[number];\r\nexport type UserRole = (typeof UserRoles)[number];\r\nexport type CustomerType = (typeof CustomerTypes)[number];\r\nexport type TruckType = (typeof TruckTypes)[number];\r\nexport type TruckStatus = (typeof TruckStatuses)[number];\r\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\r\nexport type TruckCertificate = (typeof TruckCertificates)[number];\r\nexport type TruckEquipment = (typeof TruckEquipments)[number];\r\nexport type LoadStatus = (typeof LoadStatuses)[number];\r\nexport type StopPickupStatus = (typeof StopPickUpStatuses)[number];\r\nexport type StopDeliveryStatus = (typeof StopDeliveryStatuses)[number];\r\nexport type UnitOfWeight = (typeof UnitsOfWeight)[number];\r\nexport type UnitOfLength = (typeof UnitsOfLength)[number];\r\nexport type PushState = (typeof PUSH_STATES)[number];\r\nexport type EmailState = (typeof EMAIL_STATES)[number];\r\nexport type EmailToType = (typeof EMAIL_TO_TYPES)[number];\r\nexport type FileOfType = (typeof FILE_OF_TYPES)[number];\r\n\r\nexport type GeoPoint = [number, number];\r\n\r\nexport type FormOnClose<T = any> = (\r\n  eventType: 'Create' | 'Edit' | 'Save' | 'Close',\r\n  affectedEntity?: T,\r\n) => void;\r\n\r\nexport interface Person {\r\n  id: string;\r\n  fullName: string;\r\n  type: PersonType;\r\n  phone?: string;\r\n  email?: string;\r\n}\r\n\r\nexport interface Owner extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  ownTrucks?: Truck[];\r\n  coordinators?: Coordinator[];\r\n  drivers?: Driver[];\r\n}\r\n\r\nexport interface CreateOwner {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwner extends Partial<CreateOwner> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateOwnerDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Coordinator extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  coordinateTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateCoordinator {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateCoordinatorDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinatorDriver\r\n  extends Partial<CreateCoordinatorDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Driver extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  address?: string;\r\n  driveTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateDriver extends Partial<CreateDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Truck {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n  lastCity?: string;\r\n  locationUpdatedBy?: string;\r\n  locationUpdatedAt?: string;\r\n  availabilityLocation?: GeoPoint;\r\n  availabilityAtLocal?: string;\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  crossborder: TruckCrossborder;\r\n  certificate: TruckCertificate;\r\n  type: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight: string;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  color: string;\r\n  vinCode: string;\r\n  licencePlate: string;\r\n  insideDims: string;\r\n  doorDims?: string;\r\n  rpmAvg?: number;\r\n  owner?: Owner;\r\n  coordinator?: Coordinator;\r\n  driver?: Driver;\r\n  reservedAt?: string; //Date;\r\n  reservedBy?: User;\r\n}\r\n\r\nexport interface TruckForMap {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n}\r\n\r\nexport interface CreateTruck {\r\n  truckNumber?: number;\r\n  status?: TruckStatus;\r\n  crossborder?: TruckCrossborder;\r\n  certificate?: TruckCertificate;\r\n  type?: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight?: string;\r\n  make?: string;\r\n  model?: string;\r\n  year?: number;\r\n  color?: string;\r\n  vinCode?: string;\r\n  licencePlate?: string;\r\n  insideDims?: string;\r\n  doorDims?: string;\r\n  owner?: Owner | null;\r\n  coordinator?: Coordinator | null;\r\n  driver?: Driver | null;\r\n}\r\n\r\nexport interface UpdateTruck extends Partial<CreateTruck> {\r\n  id: string;\r\n  reservedAt?: Date | null;\r\n  status?: TruckStatus;\r\n  availabilityLocation?: GeoPoint | null;\r\n  availabilityAtLocal?: Date;\r\n}\r\n\r\nexport interface Load {\r\n  id: string;\r\n  loadNumber: number;\r\n  ref?: string[];\r\n  status: LoadStatus;\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  truckDeliveryMiles?: number;\r\n  weight: string;\r\n  truckType: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  currency: string;\r\n  bookedByUser?: User;\r\n  bookedByCompany?: string;\r\n  assignTo?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck;\r\n  bookedWith?: Customer;\r\n}\r\n\r\nexport interface CreateLoad {\r\n  status: LoadStatus;\r\n  ref?: string[];\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  truckDeliveryMiles?: number;\r\n  weight?: string;\r\n  truckType?: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  profit?: number;\r\n  rpm?: number;\r\n  currency: string;\r\n  bookedByUser?: User | null;\r\n  bookedByCompany?: string;\r\n  assignTo: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck | null;\r\n  bookedWith?: Customer | null;\r\n}\r\n\r\nexport interface UpdateLoad extends Partial<CreateLoad> {\r\n  id: string;\r\n}\r\n\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  type: CustomerType;\r\n  address: string;\r\n  address2?: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  phone: string;\r\n  fax?: string;\r\n  email: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface CreateCustomer {\r\n  name?: string;\r\n  type?: CustomerType;\r\n  address?: string;\r\n  address2?: string;\r\n  city?: string;\r\n  state?: string;\r\n  zipCode?: string;\r\n  phone?: string;\r\n  fax?: string;\r\n  email?: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface UpdateCustomer extends Partial<CreateCustomer> {\r\n  id: string;\r\n}\r\nexport interface Facility {\r\n  id: string;\r\n  readonly name: string;\r\n  readonly address: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation: GeoPoint;\r\n}\r\n\r\nexport interface CreateFacility {\r\n  readonly name?: string;\r\n  readonly address?: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation?: GeoPoint;\r\n}\r\n\r\nexport interface UpdateFacility extends Partial<CreateFacility> {\r\n  id: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: string;\r\n  zipCode: string;\r\n  name: string;\r\n  stateCode: string;\r\n  stateName: string;\r\n  location: GeoPoint;\r\n}\r\n\r\nexport type CreateLocation = Omit<Location, 'id'>;\r\n\r\nexport interface UpdateLocation extends Partial<CreateLocation> {\r\n  id: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  fullName: string;\r\n  phone?: string;\r\n  userRole: UserRole;\r\n  jobTitle: string;\r\n  email: string;\r\n}\r\n\r\nexport interface CreateUser extends Omit<User, 'id'> {\r\n  password?: string;\r\n}\r\n\r\nexport interface UpdateUser extends Partial<CreateUser> {\r\n  id: string;\r\n}\r\n\r\nexport interface File {\r\n  id: string;\r\n  filename: string;\r\n  contentType: string;\r\n  contentLength: number;\r\n  comment?: string;\r\n}\r\n\r\nexport enum StopType {\r\n  PickUp = 'PickUp',\r\n  Delivery = 'Delivery',\r\n}\r\n\r\nexport enum TimeFrameType {\r\n  FCFS = 'FCFS',\r\n  APPT = 'APPT',\r\n  ASAP = 'ASAP',\r\n  Direct = 'Direct',\r\n}\r\n\r\nexport type TimeFrameFCFS = {\r\n  type: TimeFrameType.FCFS;\r\n  from: Date | null;\r\n  to: Date | null;\r\n};\r\n\r\nexport type TimeFrameAPPT = {\r\n  type: TimeFrameType.APPT;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameASAP = {\r\n  type: TimeFrameType.ASAP;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameDirect = {\r\n  type: TimeFrameType.Direct;\r\n  at: Date | null;\r\n};\r\n\r\nexport interface StopPickUp {\r\n  stopId?: string;\r\n  type: StopType.PickUp;\r\n  status: StopPickupStatus;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameASAP;\r\n  facility: Facility | null;\r\n  freightList: Freight[];\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface StopDelivery {\r\n  stopId?: string;\r\n  type: StopType.Delivery;\r\n  status: StopDeliveryStatus;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameDirect;\r\n  facility: Facility | null;\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface Freight {\r\n  freightId?: string;\r\n  pieces: number | null;\r\n  unitOfWeight: UnitOfWeight;\r\n  weight: number | null;\r\n  unitOfLength: UnitOfLength;\r\n  length: number | null;\r\n}\r\n\r\nexport interface Push {\r\n  readonly id: string;\r\n  readonly state: PushState;\r\n  readonly to: Person;\r\n  readonly title?: string;\r\n  readonly subtitle?: string;\r\n  readonly body?: string;\r\n  readonly data?: Record<string, any>;\r\n  readonly badge?: number;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly receiptResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n\r\nexport type To = {\r\n  readonly to: Person | User;\r\n  readonly toType: EmailToType;\r\n};\r\n\r\nexport interface Email {\r\n  readonly id: string;\r\n  readonly state: EmailState;\r\n  readonly from: string;\r\n  readonly to: To[];\r\n  readonly subject: string;\r\n  readonly text: string;\r\n  readonly html?: string;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n"],"names":["validationSchema","yup","truckNumber","integer","typeError","required","status","oneOf","TruckStatuses","crossborder","TruckCrossborders","certificate","TruckCertificates","type","TruckTypes","equipment","TruckEquipments","min","payload","grossWeight","make","model","year","color","vinCode","licencePlate","insideDims","doorDims","owner","id","coordinator","nullable","driver","initialValues","undefined","CreateTruckForm","_ref","onClose","driverAddQueryParams","setDriverAddQueryParams","React","coordinatorAddQueryParams","setCoordinatorAddQueryParams","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","mutate","isLoading","useMutation","TruckCreate","onSuccess","data","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","formik","useFormik","enableReinitialize","onSubmit","values","setFieldValue","prev","Object","keys","length","_jsxs","Box","sx","height","children","_jsx","handleSubmit","onReset","handleReset","style","p","Divider","maxHeight","overflowX","overflowY","display","width","paddingBottom","TextField","fieldName","label","number","SelectField","items","placeholder","disabledItems","filter","SelectMultiField","paddingTop","SearchField","getSelectedLabel","selectedItem","concat","fullName","getType","phone","getItemLabel","item","getItemSecondLabel","ListIcon","Person4Icon","queryFn","OwnersQuery","startEmpty","orderby","order","ContactPhoneIcon","CoordinatorsQuery","additionalQueryParams","driveTrucks","getOptionDisabled","_item$driveTrucks","BadgeIcon","DriversQuery","Button","fullWidth","variant","size","onClick","handleClose","Loader","visible","LangPriorities","UserRoles","CustomerTypes","LoadStatuses","StopPickUpStatuses","StopDeliveryStatuses","UnitsOfWeight","UnitsOfLength","StopType","TimeFrameType"],"sourceRoot":""}