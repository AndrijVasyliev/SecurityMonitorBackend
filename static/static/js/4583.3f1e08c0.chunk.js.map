{"version":3,"file":"static/js/4583.3f1e08c0.chunk.js","mappings":"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","sources":["icons/cat.svg","icons/truck.svg","components/LocationForGrid.tsx","trucksNearby/reserveTruckButton.tsx","components/SearchLocationForGrid.tsx","trucksNearby/trucksNearby.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","utils/dataTypes.ts","utils/dateTimeFormatters.ts","../node_modules/@mui/icons-material/esm/ContentCopy.js"],"sourcesContent":["const _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nconst SvgCat = (_ref, ref) => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 128 128\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 75,\n    r: 45,\n    fill: \"none\",\n    strokeWidth: 10,\n    style: {\n      stroke: \"currentcolor\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 96.94 40.17 C 96.94 23.36 82.19 9.73 64 9.73 C 45.81 9.73 31.06 23.36 31.06 40.17\",\n    style: {\n      paintOrder: \"fill\",\n      strokeWidth: 6,\n      stroke: \"currentcolor\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"39.98 19.5 37.64 5.17 50.61 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"87.05 19.5 89.39 5.17 76.42 14.17\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      fill: \"rgba(0, 0, 0, 0)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 29.27 108.3 C 28.05 113.07 26.83 117.84 25.62 122.61\",\n    style: {\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\",\n      strokeLinecap: \"round\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 25.72 122.61 C 38.31 122.83 50.91 123.05 63.5 123.28\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 4,\n      strokeLinecap: \"round\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 98.96 108.3 C 100.18 113.07 101.4 117.84 102.61 122.61\",\n    style: {\n      strokeLinecap: \"round\",\n      strokeWidth: 4,\n      stroke: \"currentcolor\",\n      paintOrder: \"stroke\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 102.5 122.61 C 88.91 122.85 76.32 123.07 64.72 123.28\",\n    style: {\n      strokeLinecap: \"round\",\n      stroke: \"currentcolor\",\n      strokeWidth: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"63 39.5 63 79.5 79.91 93.83\",\n    style: {\n      stroke: \"currentcolor\",\n      strokeWidth: 6,\n      paintOrder: \"fill\",\n      strokeLinecap: \"round\",\n      fill: \"rgba(255, 255, 255, 0)\"\n    }\n  }));\n};\nconst ForwardRef = /*#__PURE__*/forwardRef(SvgCat);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/cat.b0cbea142ef6c467bbabb420d9425865.svg\";","const _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nconst SvgTruck = (_ref, ref) => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 24 24\",\n    \"data-testid\": \"LocalShippingIcon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m20 8h-3v-4h-14c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zm-14 10.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9 1.96 2.5h-4.46v-2.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm-14.7-9 1.53 0 0 1.66-3.03 0 1.51-1.66zm2.46-2.74 1.66-1.84 0 4.57.94 0 0 1.66-.94 0 0 1.93-1.66 0 0-6.33zm6.58 6.48c-.37-.06-.72-.19-1.04-.37-.32-.19-.61-.42-.86-.7-.28-.32-.49-.67-.61-1.05-.12-.39-.18-.87-.18-1.44l0-4.51 1.66 0 0 4.36c0 .31.01.57.05.78.03.21.08.39.16.55.08.15.19.28.32.38.14.1.31.19.52.27l0 1.74zm.91-1.74c.21-.07.37-.16.51-.26.14-.1.25-.23.33-.39.08-.14.14-.31.17-.5.03-.2.05-.47.05-.83l0-4.36 1.65 0 0 4.51c0 .58-.06 1.06-.18 1.44-.12.38-.33.73-.61 1.05-.25.29-.54.52-.87.7-.33.18-.68.3-1.04.37l0-1.74z\",\n    style: {\n      fillRule: \"evenodd\",\n      fill: \"currentcolor\"\n    }\n  }));\n};\nconst ForwardRef = /*#__PURE__*/forwardRef(SvgTruck);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"static/media/truck.cd6a1057a38896c7dca3f9ca88d7879e.svg\";","import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\n\r\nexport default function LocationForGrid({\r\n  location,\r\n  onRefClick,\r\n  addInfo,\r\n  children,\r\n}: {\r\n  readonly location: GeoPoint;\r\n  onRefClick?: (event: React.SyntheticEvent) => void;\r\n  addInfo?: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [value, setValue] = React.useState<google.maps.GeocoderResult | null>(\r\n    null,\r\n  );\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      (geocoder?.geocode(geocodeRequest) || Promise.reject())\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((/*err*/) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    const selected = location && selectLocation(items);\r\n    if (location && selected && selected?.place_id !== value?.place_id) {\r\n      setValue(selected);\r\n    }\r\n  }, [location, items]);\r\n\r\n  React.useEffect(() => {\r\n    if (location) {\r\n      setSearch({\r\n        location: {\r\n          lat: location[0],\r\n          lng: location[1],\r\n        },\r\n      });\r\n    } else {\r\n      setItems([]);\r\n      setValue(null);\r\n    }\r\n  }, [geocoder, location.join(',')]);\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <span style={{ display: 'flex' }}>\r\n      <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n      <span\r\n        style={{\r\n          textOverflow: 'ellipsis',\r\n          overflow: 'hidden',\r\n          textAlign: 'left',\r\n        }}\r\n        title={`${value ? value.formatted_address : ''}` + '\\n' + addInfo}\r\n      >\r\n        {onRefClick ? (\r\n          <a href={'#'} target=\"_blank\" onClick={onRefClick}>\r\n            {value ? value.formatted_address : ''}\r\n          </a>\r\n        ) : value ? (\r\n          value.formatted_address\r\n        ) : (\r\n          ''\r\n        )}\r\n        {!addInfo ? null : (\r\n          <>\r\n            <br />\r\n            {addInfo}\r\n          </>\r\n        )}\r\n        {children}\r\n      </span>\r\n      {!value ? null : (\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={(event) => {\r\n            stopPropagation(event);\r\n            navigator.clipboard.writeText(value.formatted_address);\r\n          }}\r\n        >\r\n          <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n        </IconButton>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { TruckUpdate } from '../api';\r\nimport { Truck } from '../utils/dataTypes';\r\n\r\nconst reservationTime = 15 * 60 * 1000; // 15 minutes\r\n\r\nconst calcReserveWillLast = (reservedTill: Date | '' | undefined) => {\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  let reservedWillLast = (reservedTill - new Date()) / (1000 * 60);\r\n  reservedWillLast = reservedWillLast > 0 ? Math.ceil(reservedWillLast) : 0;\r\n  return reservedWillLast;\r\n};\r\n\r\nexport default function ReserveTruckButton({\r\n  truck,\r\n  index,\r\n}: {\r\n  truck: Truck;\r\n  index: number;\r\n}) {\r\n  const [remainReserved, setRemainReserved] = React.useState<number>(0);\r\n  const { reservedAt, reservedBy } = truck;\r\n  const reservedTill =\r\n    reservedAt && new Date(new Date(reservedAt).getTime() + reservationTime);\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  const isReserved = new Date() < reservedTill;\r\n\r\n  React.useEffect(() => {\r\n    if (isReserved) {\r\n      setRemainReserved(calcReserveWillLast(reservedTill));\r\n      const interval = setInterval(() => {\r\n        setRemainReserved(calcReserveWillLast(reservedTill));\r\n      }, 1000 * 2);\r\n      return () => {\r\n        clearInterval(interval);\r\n        setRemainReserved(0);\r\n      };\r\n    }\r\n  }, [isReserved, reservedTill]);\r\n\r\n  const queryClient = useQueryClient();\r\n  const { mutate /*, isLoading*/ } = useMutation(TruckUpdate, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: ['trucks'],\r\n        refetchType: 'active',\r\n      });\r\n      return;\r\n    },\r\n    onError: (/*error: Error*/) => {\r\n      return;\r\n    },\r\n  });\r\n\r\n  const reserveButtonClickHandler = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    mutate({ id: truck.id, reservedAt: isReserved ? null : new Date() });\r\n  };\r\n\r\n  const labelId = `enhanced-table-checkbox-${index}`;\r\n  const title = `${\r\n    isReserved && reservedBy\r\n      ? 'Reserved by:\\n' +\r\n        reservedBy.fullName +\r\n        '\\nTime left: ' +\r\n        remainReserved +\r\n        'min'\r\n      : ''\r\n  }`;\r\n  return (\r\n    <Button\r\n      id={`${labelId}`}\r\n      title={title}\r\n      sx={{ m: 1, height: '35px', lineHeight: 'normal', fontSize: 'x-small' }}\r\n      fullWidth\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      color=\"primary\"\r\n      onClickCapture={reserveButtonClickHandler}\r\n    >\r\n      {isReserved ? (\r\n        <span>\r\n          Unreserve\r\n          <br />({remainReserved}min)\r\n        </span>\r\n      ) : (\r\n        'Reserve'\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\n\r\nimport Autocomplete, {\r\n  AutocompleteInputChangeReason,\r\n} from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport { debounce } from '@mui/material/utils';\r\n\r\nimport { useSnackbar, useLoader } from '../hooks';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\nimport { GeoPoint } from '../utils/dataTypes';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { getMapSettings } from '../utils/getMapSettings';\r\nimport { getGeoPointFromLocation } from '../utils/getGeoPointFromLocation';\r\n\r\nexport default function SearchLocationForGrid({\r\n  label,\r\n  placeholder,\r\n  filterSelectedOptions = false,\r\n  disabled,\r\n  value,\r\n  setValue,\r\n}: {\r\n  readonly label: string;\r\n  readonly placeholder?: string;\r\n  readonly filterSelectedOptions?: boolean;\r\n  readonly disabled?: boolean;\r\n  readonly value: GeoPoint | undefined;\r\n  readonly setValue: (value: GeoPoint | undefined) => void;\r\n}) {\r\n  const [selectedValue, setSelectedValue] =\r\n    React.useState<google.maps.GeocoderResult | null>(null);\r\n  const [items, setItems] = React.useState<google.maps.GeocoderResult[]>([]);\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n  const [options, setOptions] = React.useState<\r\n    readonly google.maps.GeocoderResult[]\r\n  >([]);\r\n\r\n  const setSearch = React.useMemo(() => {\r\n    return debounce((geocodeRequest: google.maps.GeocoderRequest): void => {\r\n      (geocoder?.geocode(geocodeRequest) || Promise.reject())\r\n        .then((result) => {\r\n          if (result.results.length < 1 && geocodeRequest.location) {\r\n            const locationFromRequest = new google.maps.LatLng(\r\n              geocodeRequest.location,\r\n            );\r\n            const res: google.maps.GeocoderResult = {\r\n              address_components: [],\r\n              formatted_address: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              geometry: {\r\n                location: locationFromRequest,\r\n                location_type: google.maps.GeocoderLocationType.APPROXIMATE,\r\n                viewport: new google.maps.LatLngBounds(),\r\n              },\r\n              place_id: `[${locationFromRequest.lat()}, ${locationFromRequest.lng()}]`,\r\n              types: [],\r\n            };\r\n            setItems([res]);\r\n          } else {\r\n            result.results.forEach(\r\n              (item) =>\r\n                (item.formatted_address = toStringLocation(\r\n                  item.address_components,\r\n                )),\r\n            );\r\n            setItems(result.results);\r\n          }\r\n        })\r\n        .catch((/*err*/) => {\r\n          setItems([]);\r\n        });\r\n    }, 400);\r\n  }, [geocoder]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      selectedValue &&\r\n      !items.find((item) => item?.place_id === selectedValue?.place_id)\r\n    ) {\r\n      setOptions([selectedValue, ...items]);\r\n    } else {\r\n      setOptions([...items]);\r\n    }\r\n  }, [items, selectedValue]);\r\n\r\n  React.useEffect(() => {\r\n    const selected = value && selectLocation(items);\r\n    if (value && selected && selected?.place_id !== selectedValue?.place_id) {\r\n      setSelectedValue(selected);\r\n    } else if (!value) {\r\n      setItems([]);\r\n      setSelectedValue(null);\r\n    }\r\n  }, [geocoder, value]);\r\n\r\n  const handleChange = (\r\n    event: any,\r\n    newValue: google.maps.GeocoderResult | null,\r\n  ) => {\r\n    const newCoordsValue: GeoPoint | undefined =\r\n      getGeoPointFromLocation(newValue);\r\n    setSelectedValue(newValue);\r\n    setValue(newCoordsValue);\r\n  };\r\n\r\n  const isOptionEqualToValue = (\r\n    value: google.maps.GeocoderResult,\r\n    option: google.maps.GeocoderResult,\r\n  ) => value?.place_id === option?.place_id;\r\n\r\n  const handleInputChange = (\r\n    event: any,\r\n    newInputValue: string,\r\n    reason: AutocompleteInputChangeReason, // 'input' | 'reset' | 'clear',\r\n  ) => {\r\n    if (reason === 'input') {\r\n      setSearch({ address: newInputValue });\r\n    }\r\n  };\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n      <Autocomplete\r\n        disabled={disabled}\r\n        getOptionLabel={(option) =>\r\n          typeof option === 'string' ? option : option.formatted_address || ''\r\n        }\r\n        filterOptions={(x) => x}\r\n        options={options}\r\n        isOptionEqualToValue={isOptionEqualToValue}\r\n        autoComplete\r\n        includeInputInList\r\n        filterSelectedOptions={filterSelectedOptions}\r\n        value={selectedValue}\r\n        noOptionsText=\"No data\"\r\n        onChange={handleChange}\r\n        onInputChange={handleInputChange}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            fullWidth\r\n            size=\"small\"\r\n            label={label}\r\n            placeholder={placeholder}\r\n          />\r\n        )}\r\n        renderOption={(props, option) => (\r\n          <li\r\n            {...{ ...props, disabled }}\r\n            key={(props as any).key || option.place_id}\r\n          >\r\n            <Grid container alignItems=\"center\">\r\n              <Grid item sx={{ display: 'flex', width: 44 }}>\r\n                <LocationOnIcon sx={{ color: 'text.secondary' }} />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}\r\n              >\r\n                <Box component=\"span\" sx={{ fontWeight: 'regular' }}>\r\n                  {option.formatted_address}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </li>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { alpha, styled, useTheme } from '@mui/material/styles';\r\n// import Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\n// import Grid from '@mui/material/Grid';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { renderTimeViewClock } from '@mui/x-date-pickers/timeViewRenderers';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\n// import LocationOnIcon from '@mui/icons-material/LocationOn';\r\n// import AddIcon from '@mui/icons-material/Add';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\n// import DeleteIcon from '@mui/icons-material/Delete';\r\n// import InputLabel from '@mui/material/InputLabel';\r\n// import Select from '@mui/material/Select';\r\n// import FormHelperText from '@mui/material/FormHelperText';\r\n// import FormControl from '@mui/material/FormControl';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport FilterListOffIcon from '@mui/icons-material/FilterListOff';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n// import AccessTime from '@mui/icons-material/AccessTime';\r\n// import LocalShipping from '@mui/icons-material/LocalShipping';\r\nimport { visuallyHidden } from '@mui/utils';\r\n// import { debounce } from '@mui/material/utils';\r\nimport { grey, green } from '@mui/material/colors';\r\n\r\nimport ReserveTruckButton from './reserveTruckButton';\r\nimport { ReactComponent as CatIcon } from '../icons/cat.svg';\r\nimport { ReactComponent as TruckIcon } from '../icons/truck.svg';\r\n\r\nimport Loader from '../components/Loader';\r\nimport LocationForGrid from '../components/LocationForGrid';\r\nimport SearchLocationForGrid from '../components/SearchLocationForGrid';\r\nimport { /*LocationsQuery,*/ TrucksQuery, TruckDelete } from '../api';\r\nimport { useMap, useSnackbar } from '../hooks';\r\nimport {\r\n  Order,\r\n  Truck,\r\n  // Location,\r\n  // Result,\r\n  TruckStatuses,\r\n  TruckStatus,\r\n  GeoPoint,\r\n} from '../utils/dataTypes';\r\nimport { getPath, getType /*, modifyedQueryFn*/ } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { fromISOCorrected } from '../utils/dateTimeConverters';\r\nimport { dateTimeFormatter } from '../utils/dateTimeFormatters';\r\n\r\ninterface HeadCell {\r\n  id: string;\r\n  disablePadding: boolean;\r\n  orderField?: keyof Truck;\r\n  getData: (\r\n    row: Truck,\r\n    setMapData: any,\r\n  ) => { data: JSX.Element | string; title?: string };\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'truckNumber',\r\n    orderField: 'truckNumber',\r\n    getData: (row) => {\r\n      const firstRow = row.truckNumber ? `${row.truckNumber}` : '';\r\n      const secondRow = row.rpmAvg ? `${row.rpmAvg}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRow ? 'Truck number ' + firstRow : '') +\r\n          '\\n' +\r\n          (secondRow ? 'Average RPM ' + secondRow : ''),\r\n      };\r\n    },\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Truck Number',\r\n  },\r\n  {\r\n    id: 'mainContactInfo',\r\n    getData: (row) => {\r\n      const person = row.coordinator || row.owner;\r\n      let path = '';\r\n      let type = '';\r\n      let firstRow = '';\r\n      let secondRow = '';\r\n      if (person) {\r\n        path = `./${getPath(person)}/view/${person.id}`;\r\n        type = `${getType(person)} `;\r\n        firstRow = `${person.fullName}`;\r\n        secondRow = `${person?.phone}`;\r\n      }\r\n      return {\r\n        data: (\r\n          <span style={{ display: 'flex' }}>\r\n            <span\r\n              style={{\r\n                textOverflow: 'ellipsis',\r\n                overflow: 'hidden',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <b>{type}</b>\r\n              <a href={path} target=\"_blank\" onClick={stopPropagation}>\r\n                {firstRow}\r\n              </a>\r\n              <br />\r\n              <a\r\n                href={secondRow ? `tel:${secondRow}` : undefined}\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {secondRow || ' '}\r\n              </a>\r\n            </span>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                stopPropagation(event);\r\n                navigator.clipboard.writeText(firstRow + ' ' + secondRow);\r\n              }}\r\n            >\r\n              <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n            </IconButton>\r\n          </span>\r\n        ),\r\n        title: type + '' + firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Main Contact info',\r\n  },\r\n  {\r\n    id: 'truckInfo',\r\n    getData: (row) => {\r\n      const firstRow = row.type ? `${row.type}` : '';\r\n      const secondRow = row.equipment ? `${row.equipment.join(', ')}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {firstRow}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title: firstRow + '\\n' + secondRow,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Truck info',\r\n  },\r\n  {\r\n    id: 'dimsAndPayload',\r\n    getData: (row) => {\r\n      const firstRowPart1 = row.insideDims ? `${row.insideDims}` : '';\r\n      const firstRowPart2 = row.doorDims ? `${row.doorDims}` : '';\r\n      const secondRow = row.payload ? `${row.payload}` : '';\r\n\r\n      return {\r\n        data: (\r\n          <span>\r\n            {(firstRowPart1 ? firstRowPart1 + ' ' : '') +\r\n              `${firstRowPart2 ? '(' + firstRowPart2 + ')' : ''}`}\r\n            <br />\r\n            {secondRow}\r\n          </span>\r\n        ),\r\n        title:\r\n          (firstRowPart1 ? firstRowPart1 + ' Inside ' : '') +\r\n          (firstRowPart2 ? firstRowPart2 + ' Door ' : '') +\r\n          '\\n' +\r\n          secondRow +\r\n          ' Payload',\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'DIMS/Payload',\r\n  },\r\n  {\r\n    id: 'status',\r\n    orderField: 'status',\r\n    getData: (row) => {\r\n      const theme = useTheme();\r\n      const status = `${row.status}`;\r\n      const val = (() => {\r\n        switch (status) {\r\n          case 'Will be available':\r\n            return (\r\n              <CatIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: theme.palette.cat.main,\r\n                }}\r\n              />\r\n              /*<AccessTime\r\n                sx={{ height: '24px', width: '24px', color: grey[900] }}\r\n              />*/\r\n            );\r\n          case 'On route':\r\n            return (\r\n              <TruckIcon\r\n                style={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  color: theme.palette.truck.main,\r\n                }}\r\n              />\r\n              /*<LocalShipping\r\n                sx={{ height: '24px', width: '24px', color: orange[500] }}\r\n              />*/\r\n            );\r\n          case 'Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: green[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                A\r\n              </Avatar>\r\n            );\r\n          case 'Not Available':\r\n            return (\r\n              <Avatar\r\n                sx={{\r\n                  height: '24px',\r\n                  width: '24px',\r\n                  bgcolor: grey[500],\r\n                  margin: 'auto',\r\n                }}\r\n              >\r\n                N\r\n              </Avatar>\r\n            );\r\n          default:\r\n            return status;\r\n        }\r\n      })();\r\n\r\n      return {\r\n        data: <span>{val}</span>,\r\n        title: status,\r\n      };\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Status',\r\n  },\r\n  {\r\n    id: 'willBeAtLocation',\r\n    getData: (row) => {\r\n      if (row?.availabilityLocation) {\r\n        const secondRow = `${\r\n          row.availabilityAtLocal\r\n            ? dateTimeFormatter.format(\r\n                fromISOCorrected(row.availabilityAtLocal),\r\n              )\r\n            : ''\r\n        }`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.availabilityLocation}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Will be at location',\r\n  },\r\n  {\r\n    id: 'roadsDistance',\r\n    getData: (row) => ({\r\n      data: `${row.milesByRoads?.toFixed(2) || ''}`,\r\n    }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Road distance',\r\n  },\r\n  {\r\n    id: 'location',\r\n    getData: (row, setMapData) => {\r\n      const onRefClick = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        stopPropagation(event);\r\n        setMapData([row]);\r\n      };\r\n\r\n      if (row?.lastLocation) {\r\n        const secondRow = `${\r\n          row.locationUpdatedAt\r\n            ? dateTimeFormatter.format(new Date(row.locationUpdatedAt))\r\n            : ''\r\n        }${row.locationUpdatedBy ? ' Set by ' + row.locationUpdatedBy : ''}`;\r\n\r\n        return {\r\n          data: (\r\n            <LocationForGrid\r\n              location={row.lastLocation}\r\n              onRefClick={onRefClick}\r\n              addInfo={secondRow}\r\n            />\r\n          ),\r\n        };\r\n      } else {\r\n        return { data: '' };\r\n      }\r\n    },\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Last known location',\r\n  },\r\n  /*{\r\n    id: 'calcDistance',\r\n    getData: (row) => ({\r\n      data: `${row.milesHaversine ? row.milesHaversine.toFixed(2) : ''}`,\r\n    }),\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Origin away',\r\n  },*/\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number;\r\n  onRequestSort: (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order | undefined;\r\n  orderBy: string | undefined;\r\n  rowCount: number;\r\n}\r\n\r\nconst StyledTableHead = styled(TableHead)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledTableCell = styled(TableCell)((/*{ theme }*/) => ({\r\n  maxWidth: '100px',\r\n  paddingTop: '6px',\r\n  paddingBottom: '6px',\r\n  whiteSpace: 'nowrap',\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const {\r\n    // onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    // numSelected,\r\n    // rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler =\r\n    (property: keyof Truck) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n  return (\r\n    <StyledTableHead>\r\n      <TableRow>\r\n        <StyledTableCell align=\"center\" padding=\"checkbox\">\r\n          Actions\r\n        </StyledTableCell>\r\n        {headCells.map((headCell) => (\r\n          <StyledTableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={headCell.orderField && orderBy === headCell.orderField}\r\n              hideSortIcon={!headCell.orderField}\r\n              direction={orderBy === headCell.orderField ? order : 'asc'}\r\n              onClick={\r\n                headCell.orderField\r\n                  ? createSortHandler(headCell.orderField)\r\n                  : () => {\r\n                      return;\r\n                    }\r\n              }\r\n            >\r\n              {headCell.label}\r\n              {headCell.orderField && orderBy === headCell.orderField ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledTableCell>\r\n        ))}\r\n      </TableRow>\r\n    </StyledTableHead>\r\n  );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  selected: readonly string[];\r\n  setQueryParams: React.Dispatch<\r\n    React.SetStateAction<Record<string, number | string | string[] | Date>>\r\n  >;\r\n}\r\n\r\nfunction EnhancedTableToolbar(props: EnhancedTableToolbarProps) {\r\n  const { selected, setQueryParams } = props;\r\n  // Location field state\r\n  const [locationValue, setLocationValue] = React.useState<\r\n    GeoPoint | undefined\r\n  >(undefined);\r\n  // const [inputValue, setInputValue] = React.useState('');\r\n  // const [locationsQueryParams /*, setLocationsQueryParams*/] = React.useState<{\r\n  // search?: any;\r\n  // }>({});\r\n  // const [options, setOptions] = React.useState<readonly Location[]>([]);\r\n  const [availableFrom, setAvailableFrom] = React.useState<Date | null>(null);\r\n  const [availableTo, setAvailableTo] = React.useState<Date | null>(null);\r\n  const [isFromDateError, setFromDateError] = React.useState<boolean>(false);\r\n  const [isToDateError, setToDateError] = React.useState<boolean>(false);\r\n  const [statusOpen, setStatusOpen] = React.useState<boolean>(false);\r\n  const [statusValue, setStatusValue] = React.useState<TruckStatus[]>([\r\n    'Available',\r\n  ]);\r\n  const [distanceValue, setDistanceValue] = React.useState<number>(200);\r\n  const [searchDataChanged, setSearchDataChanged] =\r\n    React.useState<boolean>(false);\r\n\r\n  // const location = useLocation();\r\n  // const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { /*mutate,*/ isLoading } = useMutation(TruckDelete, {\r\n    onSuccess: () => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Deleted',\r\n      });\r\n      queryClient.invalidateQueries(['trucks']);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  /*const setSearch = React.useMemo(() => {\r\n    return debounce((search: string): void => {\r\n      setLocationsQueryParams({ search });\r\n    }, 400);\r\n  }, []);*/\r\n  /*const { data: { items } = { items: [], total: 0 } } = useQuery<\r\n    Result<Location>,\r\n    Error,\r\n    Result<Location>,\r\n    any // ToDo fix type\r\n  >({\r\n    queryKey: ['locations', 0, 15, 'name', 'asc', locationsQueryParams],\r\n    queryFn: modifyedQueryFn(LocationsQuery, true),\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });*/\r\n\r\n  /*React.useEffect(() => {\r\n    if (locationValue) {\r\n      const notSelectedItems = items.filter(\r\n        (item) => item.id !== locationValue.id,\r\n      );\r\n      setOptions([locationValue, ...notSelectedItems]);\r\n    } else {\r\n      if (inputValue === '') {\r\n        setOptions([]);\r\n      } else {\r\n        setOptions([...items]);\r\n      }\r\n    }\r\n  }, [locationValue, items]);*/\r\n\r\n  const handleLocationChange = (newValue: GeoPoint | undefined) => {\r\n    setLocationValue(newValue);\r\n    if (newValue) {\r\n      setQueryParams((prev) => ({\r\n        ...prev,\r\n        lastLocation: newValue.join(','),\r\n        distance: distanceValue,\r\n      }));\r\n      setSearchDataChanged(false);\r\n    } else {\r\n      // setInputValue('');\r\n      setQueryParams((prev) => {\r\n        const {\r\n          // lastLocation: _lastLocation,\r\n          // distance: _distance,\r\n          ...rest\r\n        } = prev;\r\n        return rest;\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n    // setSearchDataChanged(true);\r\n  };\r\n  /*const handleLocationInputChange = (event: any, newInputValue: string) => {\r\n    setInputValue(newInputValue);\r\n    setSearch(newInputValue);\r\n  };*/\r\n  const handleFromDateInputChange = (value: Date | null) => {\r\n    setAvailableFrom(value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleToDateInputChange = (value: Date | null) => {\r\n    setAvailableTo(value);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleFromDateOnError = (error: any /*, value: any*/) => {\r\n    if (error) {\r\n      setFromDateError(true);\r\n    } else {\r\n      setFromDateError(false);\r\n    }\r\n  };\r\n  const handleToDateOnError = (error: any /*, value: any*/) => {\r\n    if (error) {\r\n      setToDateError(true);\r\n    } else {\r\n      setToDateError(false);\r\n    }\r\n  };\r\n  const handleDateChange = () => {\r\n    /*let from = availableFrom;\r\n    let to = availableTo;\r\n    if (!from && !to) {\r\n      from = new Date(Date.now() + 1000 * 60);\r\n    }\r\n    if (!to && from) {\r\n      to = new Date(from.getTime() + dateLag);\r\n    }\r\n    if (!from && to) {\r\n      from = new Date(to.getTime() - dateLag);\r\n    }\r\n    if (from !== availableFrom) {\r\n      setAvailableFrom(from);\r\n    }\r\n    if (to !== availableTo) {\r\n      setAvailableTo(to);\r\n    }*/\r\n    if (!isFromDateError && !isToDateError) {\r\n      setQueryParams((prev) => {\r\n        const res = { ...prev };\r\n        /*if (from) {\r\n          res.availableAfter = from;\r\n        }\r\n        if (to) {\r\n          res.availableBefore = to;\r\n        }*/\r\n        if (availableFrom) {\r\n          res.availableAfter = availableFrom;\r\n        }\r\n        if (availableTo) {\r\n          res.availableBefore = availableTo;\r\n        }\r\n        return res;\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const handleStatusInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setStatusValue(event.target.value as unknown as TruckStatus[]);\r\n    setSearchDataChanged(true);\r\n  };\r\n  const handleStatusKeyUp = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n    handleStatusClose();\r\n  };\r\n  const handleStatusKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key !== 'Enter') {\r\n      return;\r\n    }\r\n    stopPropagation(event);\r\n  };\r\n  const handleStatusOpen = () => {\r\n    setStatusOpen(true);\r\n  };\r\n  const handleStatusClose = () => {\r\n    setStatusOpen(false);\r\n    handleStatusChange();\r\n  };\r\n  const handleStatusChange = () => {\r\n    if (statusValue.length && statusValue.length !== TruckStatuses.length) {\r\n      setQueryParams((prev) => ({ ...prev, status: statusValue }));\r\n      setSearchDataChanged(false);\r\n    } else {\r\n      setQueryParams((prev) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { status: _, ...rest } = prev;\r\n        return { ...rest };\r\n      });\r\n      setSearchDataChanged(false);\r\n    }\r\n  };\r\n  const handleDistanceInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    if (Number.isInteger(Number(event.target.value))) {\r\n      setDistanceValue(Number(event.target.value));\r\n      if (locationValue) {\r\n        setQueryParams((prev) => ({\r\n          ...prev,\r\n          distance: Number(event.target.value),\r\n        }));\r\n        setSearchDataChanged(false);\r\n      }\r\n      // setSearchDataChanged(true);\r\n    }\r\n  };\r\n  const handleClearFilter = () => {\r\n    setLocationValue(undefined);\r\n    setAvailableFrom(null);\r\n    setAvailableTo(null);\r\n    // setStatusValue([...TruckStatuses]);\r\n    setStatusValue(['Available']);\r\n    setDistanceValue(200);\r\n    setQueryParams({ status: ['Available'] });\r\n    setSearchDataChanged(false);\r\n  };\r\n  const handleApplyFilter = () => {\r\n    const queryParams: Record<string, any> = {};\r\n    if (locationValue) {\r\n      queryParams.lastLocation = locationValue.join(',');\r\n      queryParams.distance = distanceValue;\r\n    }\r\n    if (\r\n      statusValue.length !== 0 &&\r\n      statusValue.length !== TruckStatuses.length\r\n    ) {\r\n      queryParams.status = statusValue;\r\n    }\r\n\r\n    /*let from = availableFrom;\r\n    let to = availableTo;\r\n    if (!from && !to) {\r\n      from = new Date(Date.now() + 1000 * 60);\r\n    }\r\n    if (!to && from) {\r\n      to = new Date(from.getTime() + dateLag);\r\n    }\r\n    if (!from && to) {\r\n      from = new Date(to.getTime() - dateLag);\r\n    }\r\n    if (from !== availableFrom) {\r\n      setAvailableFrom(from);\r\n    }\r\n    if (to !== availableTo) {\r\n      setAvailableTo(to);\r\n    }\r\n    queryParams.availableAfter = from;\r\n    queryParams.availableBefore = to;*/\r\n    queryParams.availableAfter = availableFrom;\r\n    queryParams.availableBefore = availableTo;\r\n\r\n    setQueryParams(queryParams);\r\n    setSearchDataChanged(false);\r\n  };\r\n  // const createHandler = () => {\r\n  //   navigate('./create', {\r\n  //     relative: 'path',\r\n  //     state: { from: location },\r\n  //     replace: false,\r\n  //   });\r\n  // };\r\n  // const editHandler = () => {\r\n  //   navigate(`./edit/${selected[0]}`, {\r\n  //     relative: 'path',\r\n  //     state: { from: location },\r\n  //     replace: false,\r\n  //   });\r\n  // };\r\n  // const deleteHandler = () => {\r\n  //   mutate(`${selected[0]}`);\r\n  // };\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        overflow: 'hidden',\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(selected.length > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity,\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {selected.length > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {selected.length} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{\r\n            flex: '1 1 100%',\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n          }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Trucks Nearby\r\n        </Typography>\r\n      )}\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '350px' },\r\n        }}\r\n      >\r\n        <SearchLocationForGrid\r\n          label={'Enter city, state or zip'}\r\n          value={locationValue}\r\n          setValue={handleLocationChange}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '200px' },\r\n        }}\r\n      >\r\n        <DateTimePicker\r\n          label=\"Select available from\"\r\n          ampm={false}\r\n          disablePast={true}\r\n          maxDateTime={availableTo ? availableTo : undefined}\r\n          disableIgnoringDatePartForTimeValidation={true}\r\n          viewRenderers={{\r\n            hours: renderTimeViewClock,\r\n            minutes: renderTimeViewClock,\r\n            seconds: renderTimeViewClock,\r\n          }}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              size: 'small',\r\n              id: 'availableFrom',\r\n              name: 'Select available from',\r\n              onBlur: handleDateChange,\r\n            },\r\n          }}\r\n          value={availableFrom}\r\n          onChange={handleFromDateInputChange}\r\n          onClose={handleDateChange}\r\n          onError={handleFromDateOnError}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '200px' },\r\n        }}\r\n      >\r\n        <DateTimePicker\r\n          label=\"Select available to\"\r\n          ampm={false}\r\n          disablePast={true}\r\n          minDateTime={availableFrom ? availableFrom : undefined}\r\n          disableIgnoringDatePartForTimeValidation={true}\r\n          viewRenderers={{\r\n            hours: renderTimeViewClock,\r\n            minutes: renderTimeViewClock,\r\n            seconds: renderTimeViewClock,\r\n          }}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              size: 'small',\r\n              id: 'availableTo',\r\n              name: 'Select available to',\r\n              onBlur: handleDateChange,\r\n            },\r\n          }}\r\n          value={availableTo}\r\n          onChange={handleToDateInputChange}\r\n          onClose={handleDateChange}\r\n          onError={handleToDateOnError}\r\n        />\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          SelectProps={{\r\n            multiple: true,\r\n            open: statusOpen,\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            //@ts-ignore\r\n            renderValue: (selected: TruckStatus[]) => selected.join(', '),\r\n            onOpen: handleStatusOpen,\r\n            onClose: handleStatusClose,\r\n          }}\r\n          label=\"Select Status\"\r\n          value={statusValue}\r\n          onChange={handleStatusInputChange}\r\n          onKeyUpCapture={handleStatusKeyUp}\r\n          onKeyDownCapture={handleStatusKeyDown}\r\n          onBlur={handleStatusChange}\r\n          size=\"small\"\r\n          fullWidth\r\n          title={statusValue.join(', ')}\r\n        >\r\n          {TruckStatuses.map((status) => (\r\n            <MenuItem key={status} value={status}>\r\n              <Checkbox\r\n                checked={statusValue.indexOf(status as TruckStatus) > -1}\r\n                id={status}\r\n              />\r\n              <ListItemText primary={status} />\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Box\r\n        component=\"div\"\r\n        sx={{\r\n          '& .MuiTextField-root': { m: 1, width: '140px' },\r\n        }}\r\n      >\r\n        <TextField\r\n          select\r\n          label=\"Select Distance\"\r\n          value={distanceValue}\r\n          onChange={handleDistanceInputChange}\r\n          size=\"small\"\r\n          fullWidth\r\n        >\r\n          {Array.from(\r\n            { length: (1000 - 50) / 50 + 1 },\r\n            (_, index) => 50 + index * 50,\r\n          ).map((option) => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      <Tooltip title=\"Filter list\">\r\n        {searchDataChanged ||\r\n        !(\r\n          locationValue ||\r\n          availableFrom ||\r\n          availableTo ||\r\n          !(statusValue.length === 1 && statusValue[0] === 'Available')\r\n        ) ? (\r\n          <span>\r\n            <IconButton\r\n              disabled={\r\n                ((!locationValue || !distanceValue) &&\r\n                  !(\r\n                    availableFrom ||\r\n                    availableTo ||\r\n                    !(\r\n                      statusValue.length === 1 && statusValue[0] === 'Available'\r\n                    )\r\n                  )) ||\r\n                isFromDateError ||\r\n                isToDateError\r\n              }\r\n              onClick={handleApplyFilter}\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <IconButton onClick={handleClearFilter}>\r\n              <FilterListOffIcon />\r\n            </IconButton>\r\n          </span>\r\n        )}\r\n      </Tooltip>\r\n      <Loader visible={isLoading} />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState<Order | undefined>(undefined);\r\n  const [orderBy, setOrderBy] = React.useState<keyof Truck | undefined>(\r\n    undefined,\r\n  );\r\n  const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState<number>(15);\r\n  const [queryParams, setQueryParams] = React.useState<Record<string, any>>({\r\n    status: ['Available'],\r\n  });\r\n  const tableContainerRef = React.useRef(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const setSnackbarMessage = useSnackbar();\r\n  const [, setMapData] = useMap();\r\n\r\n  const {\r\n    isLoading,\r\n    isFetching,\r\n    error,\r\n    data: { items, total } = { items: [], total: 0 },\r\n  } = useQuery({\r\n    queryKey: ['trucks', page, rowsPerPage, orderBy, order, queryParams],\r\n    queryFn: TrucksQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });\r\n  React.useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n    setSnackbarMessage({\r\n      severity: 'error',\r\n      message: error instanceof Error ? error.message : JSON.stringify(error),\r\n    });\r\n  }, [error]);\r\n  const rows = items || [];\r\n\r\n  React.useEffect(() => {\r\n    if (tableContainerRef.current) {\r\n      const container = tableContainerRef.current as HTMLElement;\r\n      container.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [rows]);\r\n\r\n  React.useEffect(() => {\r\n    const newSelected: string[] = [];\r\n    selected.forEach((selectedItem) => {\r\n      const selectedRow = rows.find((row) => row.id === selectedItem);\r\n      if (selectedRow) {\r\n        newSelected.push(selectedItem);\r\n      }\r\n    });\r\n    setSelected(newSelected);\r\n  }, [rows]);\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof Truck,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    if (isDesc) {\r\n      setOrder(undefined);\r\n      setOrderBy(undefined);\r\n    } else {\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    }\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n: Truck) => n.id);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown>,\r\n    item: (typeof rows)[number],\r\n  ) => {\r\n    navigate(`./view/${item.id}`, {\r\n      relative: 'path',\r\n      state: { from: location },\r\n      replace: false,\r\n    });\r\n  };\r\n\r\n  /* const handleSelect = (\r\n    event: React.MouseEvent<unknown> /!*, name: string*!/\r\n  ) => {\r\n    event.stopPropagation();\r\n    // const selectedIndex = selected.indexOf(name);\r\n    // let newSelected: readonly string[] = [];\r\n    //\r\n    // if (selectedIndex === -1) {\r\n    //     newSelected = newSelected.concat(selected, name);\r\n    // } else if (selectedIndex === 0) {\r\n    //     newSelected = newSelected.concat(selected.slice(1));\r\n    // } else if (selectedIndex === selected.length - 1) {\r\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\r\n    // } else if (selectedIndex > 0) {\r\n    //     newSelected = newSelected.concat(\r\n    //         selected.slice(0, selectedIndex),\r\n    //         selected.slice(selectedIndex + 1),\r\n    //     );\r\n    // }\r\n    //\r\n    // setSelected(newSelected);\r\n  };*/\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%' }}>\r\n      <Paper sx={{ width: '100%', height: '100%', backgroundColor: 'unset' }}>\r\n        <EnhancedTableToolbar\r\n          selected={selected}\r\n          setQueryParams={(query) => {\r\n            setQueryParams(query);\r\n            setPage(0);\r\n          }}\r\n        />\r\n        <TableContainer\r\n          ref={tableContainerRef}\r\n          sx={{ height: 'calc(100% - 115px)' }}\r\n        >\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {rows.map((row, index) => {\r\n                const isItemSelected = isSelected(`${row.id}`);\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onDoubleClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    selected={isItemSelected}\r\n                    sx={{ cursor: 'pointer' }}\r\n                  >\r\n                    <StyledTableCell padding=\"checkbox\">\r\n                      <ReserveTruckButton truck={row} index={index} />\r\n                    </StyledTableCell>\r\n                    {headCells.map((cell) => {\r\n                      const cellData = cell.getData(row, setMapData);\r\n                      return (\r\n                        <StyledTableCell\r\n                          key={cell.id}\r\n                          title={cellData.title}\r\n                          align={cell.numeric ? 'right' : 'center'}\r\n                        >\r\n                          {cellData.data}\r\n                        </StyledTableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 35, 50]}\r\n          component=\"div\"\r\n          count={total}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Loader visible={isLoading || isFetching} />\r\n    </Box>\r\n  );\r\n}\r\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import React from 'react';\r\nimport { AlertColor } from '@mui/material/Alert/Alert';\r\n\r\nexport const EntityTypes = [\r\n  'Truck',\r\n  'Load',\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n  'Location',\r\n  'User',\r\n  'Customer',\r\n  'Facility',\r\n] as const;\r\n\r\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\r\n\r\nexport const PersonTypes = [\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n] as const;\r\n\r\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\r\n\r\nexport const CustomerTypes = [\r\n  'BROKER DOMESTIC',\r\n  'BROKER INTERNATIONAL',\r\n  'FREIGHT FORWARDER DOMESTIC',\r\n  'FREIGHT FORWARDER INTERNATIONAL',\r\n  'SHIPPER/CONSIGNEE DOMESTIC',\r\n  'SHIPPER/CONSIGNEE INTERNATIONAL',\r\n  'OTHER',\r\n] as const;\r\n\r\nexport const TruckTypes = [\r\n  'Cargo van',\r\n  'Reefer van',\r\n  'Box truck',\r\n  'Box truck Reefer',\r\n  'Straight truck',\r\n  'Hotshot',\r\n  'Tented box',\r\n] as const;\r\n\r\nexport const TruckStatuses = [\r\n  'Available',\r\n  'Not Available',\r\n  'Will be available',\r\n  'On route',\r\n] as const;\r\n\r\nexport const TruckCrossborders = ['Yes', 'No'] as const;\r\n\r\nexport const TruckCertificates = [\r\n  'Hazmat',\r\n  'Tsa',\r\n  'TWIC',\r\n  'Tanker Endorsement',\r\n] as const;\r\n\r\nexport const TruckEquipments = [\r\n  'Dock height risers',\r\n  'Air ride',\r\n  'Lift gate',\r\n  'Keep from freezing',\r\n  'ICC bar',\r\n  'Vertical E-track',\r\n  'Horizontal E-track',\r\n  'Pallet jack',\r\n  'PPE',\r\n  'Ramps',\r\n  'Straps',\r\n  'Loads bars',\r\n  'Blankets',\r\n  'Pads',\r\n  'Fire extinguisher',\r\n  'Metal hooks',\r\n  'Reefer',\r\n  'Heater',\r\n] as const;\r\n\r\nexport const LoadStatuses = [\r\n  'Available',\r\n  'Planned',\r\n  'In Progress',\r\n  'TONU',\r\n  'Cancelled',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const StopPickUpStatuses = [\r\n  'New',\r\n  'On route to PU',\r\n  'On site PU',\r\n  'Loaded, Waiting GTG',\r\n  'GTG',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const StopDeliveryStatuses = [\r\n  'New',\r\n  'On route to DEL',\r\n  'On site DEL',\r\n  'Unloaded, Waiting GTG',\r\n  'GTG',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const UnitsOfWeight = ['LBS', 'KG', 'TON'] as const;\r\n\r\nexport const UnitsOfLength = ['FT', 'IN', 'M', 'CM'] as const;\r\n\r\nexport const PUSH_STATES = [\r\n  'New',\r\n  'Ready for send',\r\n  'Processing send',\r\n  'Sent for deliver',\r\n  'Error sending',\r\n  'Ready for receiving receipt',\r\n  'Processing receiving receipt',\r\n  'Sent to user',\r\n  'Error from receipt',\r\n  'Error receiving receipt',\r\n] as const;\r\n\r\nexport const EMAIL_STATES = [\r\n  'New',\r\n  'Ready',\r\n  'Processing',\r\n  'Sent',\r\n  'Error',\r\n] as const;\r\n\r\nexport const EMAIL_TO_TYPES = ['User', 'Person'] as const;\r\n\r\nexport const FILE_OF_TYPES = ['Truck', 'Person', 'Load'] as const;\r\n\r\nexport type Order = 'asc' | 'desc';\r\nexport type QueryKey<T> = readonly [\r\n  key: string,\r\n  page: number,\r\n  rowsPerPage: number,\r\n  orderBy?: string,\r\n  order?: Order,\r\n  queryParams?: T,\r\n];\r\n// export type BaseQuery = {\r\n//   readonly queryKey: QueryKey;\r\n// };\r\nexport type Query<T> = {\r\n  readonly queryKey: QueryKey<T>;\r\n};\r\nexport type QuerySingleKey = readonly [key: string, recordId: string];\r\nexport type QuerySingle = {\r\n  readonly queryKey: QuerySingleKey;\r\n};\r\nexport type Result<T> = {\r\n  items: T[];\r\n  limit: number;\r\n  offset: number;\r\n  total: number;\r\n};\r\nexport type QueryFn<SearchType = any, ResultType = any> = (\r\n  query: Query<{ search: SearchType }>,\r\n) => Promise<Result<ResultType>>;\r\n\r\nexport type UserDataType = {\r\n  username: string;\r\n  password: string;\r\n} & Partial<User>;\r\nexport interface AuthContextType {\r\n  user: UserDataType | null;\r\n  signin: (\r\n    username: string,\r\n    password: string,\r\n    callback: (user: UserDataType | null) => void,\r\n  ) => void;\r\n  signout: (callback: VoidFunction) => void;\r\n}\r\nexport type SnackbarMessage = {\r\n  message: string;\r\n  severity: AlertColor;\r\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\r\n};\r\nexport type EntityType = (typeof EntityTypes)[number];\r\nexport type PersonType = (typeof PersonTypes)[number];\r\nexport type LangPriority = (typeof LangPriorities)[number];\r\nexport type UserRole = (typeof UserRoles)[number];\r\nexport type CustomerType = (typeof CustomerTypes)[number];\r\nexport type TruckType = (typeof TruckTypes)[number];\r\nexport type TruckStatus = (typeof TruckStatuses)[number];\r\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\r\nexport type TruckCertificate = (typeof TruckCertificates)[number];\r\nexport type TruckEquipment = (typeof TruckEquipments)[number];\r\nexport type LoadStatus = (typeof LoadStatuses)[number];\r\nexport type StopPickupStatus = (typeof StopPickUpStatuses)[number];\r\nexport type StopDeliveryStatus = (typeof StopDeliveryStatuses)[number];\r\nexport type UnitOfWeight = (typeof UnitsOfWeight)[number];\r\nexport type UnitOfLength = (typeof UnitsOfLength)[number];\r\nexport type PushState = (typeof PUSH_STATES)[number];\r\nexport type EmailState = (typeof EMAIL_STATES)[number];\r\nexport type EmailToType = (typeof EMAIL_TO_TYPES)[number];\r\nexport type FileOfType = (typeof FILE_OF_TYPES)[number];\r\n\r\nexport type GeoPoint = [number, number];\r\n\r\nexport type FormOnClose<T = any> = (\r\n  eventType: 'Create' | 'Edit' | 'Save' | 'Close',\r\n  affectedEntity?: T,\r\n) => void;\r\n\r\nexport interface Person {\r\n  id: string;\r\n  fullName: string;\r\n  type: PersonType;\r\n  phone?: string;\r\n  email?: string;\r\n}\r\n\r\nexport interface Owner extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  ownTrucks?: Truck[];\r\n  coordinators?: Coordinator[];\r\n  drivers?: Driver[];\r\n}\r\n\r\nexport interface CreateOwner {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwner extends Partial<CreateOwner> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateOwnerDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Coordinator extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  coordinateTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateCoordinator {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateCoordinatorDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinatorDriver\r\n  extends Partial<CreateCoordinatorDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Driver extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  address?: string;\r\n  driveTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateDriver extends Partial<CreateDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Truck {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n  lastCity?: string;\r\n  locationUpdatedBy?: string;\r\n  locationUpdatedAt?: string;\r\n  availabilityLocation?: GeoPoint;\r\n  availabilityAtLocal?: string;\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  crossborder: TruckCrossborder;\r\n  certificate: TruckCertificate;\r\n  type: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight: string;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  color: string;\r\n  vinCode: string;\r\n  licencePlate: string;\r\n  insideDims: string;\r\n  doorDims?: string;\r\n  rpmAvg?: number;\r\n  owner?: Owner;\r\n  coordinator?: Coordinator;\r\n  driver?: Driver;\r\n  reservedAt?: string; //Date;\r\n  reservedBy?: User;\r\n}\r\n\r\nexport interface TruckForMap {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n}\r\n\r\nexport interface CreateTruck {\r\n  truckNumber?: number;\r\n  status?: TruckStatus;\r\n  crossborder?: TruckCrossborder;\r\n  certificate?: TruckCertificate;\r\n  type?: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight?: string;\r\n  make?: string;\r\n  model?: string;\r\n  year?: number;\r\n  color?: string;\r\n  vinCode?: string;\r\n  licencePlate?: string;\r\n  insideDims?: string;\r\n  doorDims?: string;\r\n  owner?: Owner | null;\r\n  coordinator?: Coordinator | null;\r\n  driver?: Driver | null;\r\n}\r\n\r\nexport interface UpdateTruck extends Partial<CreateTruck> {\r\n  id: string;\r\n  reservedAt?: Date | null;\r\n  status?: TruckStatus;\r\n  availabilityLocation?: GeoPoint | null;\r\n  availabilityAtLocal?: Date;\r\n}\r\n\r\nexport interface Load {\r\n  id: string;\r\n  loadNumber: number;\r\n  ref?: string[];\r\n  status: LoadStatus;\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  truckDeliveryMiles?: number;\r\n  weight: string;\r\n  truckType: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  currency: string;\r\n  bookedByUser?: User;\r\n  bookedByCompany?: string;\r\n  assignTo?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck;\r\n  bookedWith?: Customer;\r\n}\r\n\r\nexport interface CreateLoad {\r\n  status: LoadStatus;\r\n  ref?: string[];\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  truckDeliveryMiles?: number;\r\n  weight?: string;\r\n  truckType?: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  profit?: number;\r\n  rpm?: number;\r\n  currency: string;\r\n  bookedByUser?: User | null;\r\n  bookedByCompany?: string;\r\n  assignTo: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck | null;\r\n  bookedWith?: Customer | null;\r\n}\r\n\r\nexport interface UpdateLoad extends Partial<CreateLoad> {\r\n  id: string;\r\n}\r\n\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  type: CustomerType;\r\n  address: string;\r\n  address2?: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  phone: string;\r\n  fax?: string;\r\n  email: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface CreateCustomer {\r\n  name?: string;\r\n  type?: CustomerType;\r\n  address?: string;\r\n  address2?: string;\r\n  city?: string;\r\n  state?: string;\r\n  zipCode?: string;\r\n  phone?: string;\r\n  fax?: string;\r\n  email?: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface UpdateCustomer extends Partial<CreateCustomer> {\r\n  id: string;\r\n}\r\nexport interface Facility {\r\n  id: string;\r\n  readonly name: string;\r\n  readonly address: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation: GeoPoint;\r\n}\r\n\r\nexport interface CreateFacility {\r\n  readonly name?: string;\r\n  readonly address?: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation?: GeoPoint;\r\n}\r\n\r\nexport interface UpdateFacility extends Partial<CreateFacility> {\r\n  id: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: string;\r\n  zipCode: string;\r\n  name: string;\r\n  stateCode: string;\r\n  stateName: string;\r\n  location: GeoPoint;\r\n}\r\n\r\nexport type CreateLocation = Omit<Location, 'id'>;\r\n\r\nexport interface UpdateLocation extends Partial<CreateLocation> {\r\n  id: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  fullName: string;\r\n  phone?: string;\r\n  userRole: UserRole;\r\n  jobTitle: string;\r\n  email: string;\r\n}\r\n\r\nexport interface CreateUser extends Omit<User, 'id'> {\r\n  password?: string;\r\n}\r\n\r\nexport interface UpdateUser extends Partial<CreateUser> {\r\n  id: string;\r\n}\r\n\r\nexport interface File {\r\n  id: string;\r\n  filename: string;\r\n  contentType: string;\r\n  contentLength: number;\r\n  comment?: string;\r\n}\r\n\r\nexport enum StopType {\r\n  PickUp = 'PickUp',\r\n  Delivery = 'Delivery',\r\n}\r\n\r\nexport enum TimeFrameType {\r\n  FCFS = 'FCFS',\r\n  APPT = 'APPT',\r\n  ASAP = 'ASAP',\r\n  Direct = 'Direct',\r\n}\r\n\r\nexport type TimeFrameFCFS = {\r\n  type: TimeFrameType.FCFS;\r\n  from: Date | null;\r\n  to: Date | null;\r\n};\r\n\r\nexport type TimeFrameAPPT = {\r\n  type: TimeFrameType.APPT;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameASAP = {\r\n  type: TimeFrameType.ASAP;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameDirect = {\r\n  type: TimeFrameType.Direct;\r\n  at: Date | null;\r\n};\r\n\r\nexport interface StopPickUp {\r\n  stopId?: string;\r\n  type: StopType.PickUp;\r\n  status: StopPickupStatus;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameASAP;\r\n  facility: Facility | null;\r\n  freightList: Freight[];\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface StopDelivery {\r\n  stopId?: string;\r\n  type: StopType.Delivery;\r\n  status: StopDeliveryStatus;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameDirect;\r\n  facility: Facility | null;\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface Freight {\r\n  freightId?: string;\r\n  pieces: number | null;\r\n  unitOfWeight: UnitOfWeight;\r\n  weight: number | null;\r\n  unitOfLength: UnitOfLength;\r\n  length: number | null;\r\n}\r\n\r\nexport interface Push {\r\n  readonly id: string;\r\n  readonly state: PushState;\r\n  readonly to: Person;\r\n  readonly title?: string;\r\n  readonly subtitle?: string;\r\n  readonly body?: string;\r\n  readonly data?: Record<string, any>;\r\n  readonly badge?: number;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly receiptResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n\r\nexport type To = {\r\n  readonly to: Person | User;\r\n  readonly toType: EmailToType;\r\n};\r\n\r\nexport interface Email {\r\n  readonly id: string;\r\n  readonly state: EmailState;\r\n  readonly from: string;\r\n  readonly to: To[];\r\n  readonly subject: string;\r\n  readonly text: string;\r\n  readonly html?: string;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n","export const dateTimeFormatter = Intl.DateTimeFormat('en-US', {\r\n  year: 'numeric',\r\n  month: 'numeric',\r\n  day: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric',\r\n  hour12: true,\r\n});\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');"],"names":["_excluded","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgCat","_ref","ref","title","titleId","props","o","i","includes","_objectWithoutPropertiesLoose","getOwnPropertySymbols","s","propertyIsEnumerable","_objectWithoutProperties","id","xmlns","viewBox","cx","cy","fill","strokeWidth","style","stroke","d","paintOrder","points","strokeLinecap","ForwardRef","forwardRef","SvgTruck","focusable","fillRule","LocationForGrid","location","onRefClick","addInfo","children","value","setValue","React","items","setItems","geocoder","setGeocoder","setSearch","debounce","geocodeRequest","geocode","Promise","reject","then","result","results","locationFromRequest","google","maps","LatLng","res","address_components","formatted_address","concat","lat","lng","geometry","location_type","GeocoderLocationType","APPROXIMATE","viewport","LatLngBounds","place_id","types","forEach","item","toStringLocation","catch","selected","selectLocation","join","_jsxs","display","_jsx","Wrapper","_objectSpread","getMapSettings","render","status","setSnackbarMessage","useSnackbar","setLoaderVisibility","useLoader","Status","LOADING","FAILURE","severity","message","SUCCESS","window","Geocoder","textOverflow","overflow","textAlign","href","target","onClick","_Fragment","IconButton","size","event","stopPropagation","navigator","clipboard","writeText","ContentCopy","sx","height","width","reservationTime","calcReserveWillLast","reservedTill","reservedWillLast","Date","Math","ceil","ReserveTruckButton","truck","index","remainReserved","setRemainReserved","reservedAt","reservedBy","getTime","isReserved","interval","setInterval","clearInterval","queryClient","useQueryClient","mutate","useMutation","TruckUpdate","onSuccess","invalidateQueries","queryKey","refetchType","onError","labelId","fullName","Button","m","lineHeight","fontSize","fullWidth","variant","color","onClickCapture","preventDefault","SearchLocationForGrid","label","placeholder","filterSelectedOptions","disabled","selectedValue","setSelectedValue","options","setOptions","find","Autocomplete","getOptionLabel","option","filterOptions","x","isOptionEqualToValue","autoComplete","includeInputInList","noOptionsText","onChange","handleChange","newValue","newCoordsValue","getGeoPointFromLocation","onInputChange","handleInputChange","newInputValue","reason","address","renderInput","params","TextField","renderOption","_createElement","key","Grid","container","alignItems","LocationOnIcon","wordWrap","Box","component","fontWeight","headCells","orderField","getData","row","firstRow","truckNumber","secondRow","rpmAvg","data","numeric","disablePadding","person","coordinator","owner","path","type","getPath","getType","phone","undefined","equipment","firstRowPart1","insideDims","firstRowPart2","doorDims","payload","theme","useTheme","val","CatIcon","palette","cat","main","TruckIcon","Avatar","bgcolor","green","margin","grey","availabilityLocation","availabilityAtLocal","dateTimeFormatter","format","fromISOCorrected","_row$milesByRoads","milesByRoads","toFixed","setMapData","lastLocation","locationUpdatedAt","locationUpdatedBy","StyledTableHead","styled","TableHead","backgroundColor","background","default","StyledTableCell","TableCell","maxWidth","paddingTop","paddingBottom","whiteSpace","EnhancedTableHead","order","orderBy","onRequestSort","TableRow","align","padding","map","headCell","sortDirection","TableSortLabel","active","hideSortIcon","direction","property","visuallyHidden","EnhancedTableToolbar","setQueryParams","locationValue","setLocationValue","availableFrom","setAvailableFrom","availableTo","setAvailableTo","isFromDateError","setFromDateError","isToDateError","setToDateError","statusOpen","setStatusOpen","statusValue","setStatusValue","distanceValue","setDistanceValue","searchDataChanged","setSearchDataChanged","isLoading","TruckDelete","error","Error","JSON","stringify","handleDateChange","prev","availableAfter","availableBefore","handleStatusClose","handleStatusChange","TruckStatuses","_","rest","Toolbar","pl","sm","pr","xs","alpha","primary","action","activatedOpacity","Typography","flex","distance","TypeError","_objectDestructuringEmpty","DateTimePicker","ampm","disablePast","maxDateTime","disableIgnoringDatePartForTimeValidation","viewRenderers","hours","renderTimeViewClock","minutes","seconds","slotProps","textField","name","onBlur","onClose","minDateTime","select","SelectProps","multiple","open","renderValue","onOpen","handleStatusOpen","onKeyUpCapture","onKeyDownCapture","MenuItem","Checkbox","checked","indexOf","ListItemText","Number","isInteger","Array","from","Tooltip","handleApplyFilter","queryParams","FilterListIcon","handleClearFilter","FilterListOffIcon","Loader","visible","EnhancedTable","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","tableContainerRef","useLocation","navigate","useNavigate","useMap","isFetching","total","useQuery","queryFn","TrucksQuery","keepPreviousData","retry","rows","current","scrollTo","top","left","behavior","newSelected","selectedItem","push","Paper","query","TableContainer","Table","minWidth","stickyHeader","numSelected","onSelectAllClick","handleRequestSort","isAsc","rowCount","TableBody","isItemSelected","hover","onDoubleClick","relative","state","replace","role","tabIndex","cursor","cell","cellData","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","LangPriorities","UserRoles","CustomerTypes","TruckTypes","TruckCrossborders","TruckCertificates","TruckEquipments","LoadStatuses","StopPickUpStatuses","StopDeliveryStatuses","UnitsOfWeight","UnitsOfLength","StopType","TimeFrameType","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","createSvgIcon"],"sourceRoot":""}