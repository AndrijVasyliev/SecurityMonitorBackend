{"version":3,"file":"static/js/2319.453ca7dc.chunk.js","mappings":"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","sources":["GoogleMaps/map.tsx","GoogleMaps/mapComponent.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\nimport MapComponent from './mapComponent';\r\nimport Loader from '../components/Loader';\r\nimport { TrucksForMapQuery } from '../api';\r\nimport { TruckForMap } from '../utils/dataTypes';\r\n\r\nexport default function GeneralMap() {\r\n  const {\r\n    isLoading: isTruckListLoading,\r\n    isFetching: isTruckListFetching,\r\n    data: truckListData,\r\n  } = useQuery({\r\n    queryKey: ['trucksForMap'],\r\n    queryFn: TrucksForMapQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n  });\r\n  const rows: TruckForMap[] = (truckListData || []).filter(\r\n    (truck) => truck.lastLocation,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MapComponent truckListData={rows} />\r\n      <Loader visible={isTruckListLoading || isTruckListFetching} />\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\nimport { MarkerClusterer as MarkerClustererClass } from '@googlemaps/markerclusterer';\r\n\r\nimport Slide from '@mui/material/Slide';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Button from '@mui/material/Button';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\nimport Loader from '../components/Loader';\r\nimport { TruckQuery } from '../api';\r\nimport { useLoader, useSnackbar } from '../hooks';\r\nimport { Truck, TruckForMap } from '../utils/dataTypes';\r\nimport { getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { getMapSettings, center, mapId, zoom } from '../utils/getMapSettings';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function MapComponent({\r\n  truckListData,\r\n}: {\r\n  truckListData: TruckForMap[];\r\n}) {\r\n  let mapCenter = center;\r\n  let mapZoom = zoom;\r\n  if (truckListData.length === 1 && truckListData[0].lastLocation) {\r\n    mapCenter = {\r\n      lat: truckListData[0].lastLocation[0],\r\n      lng: truckListData[0].lastLocation[1],\r\n    };\r\n    mapZoom = mapZoom * 2;\r\n  }\r\n\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n  const [selectedTruckId, setSelectedTruckId] = React.useState<string>('');\r\n  const [selectedTruck, setSelectedTruck] = React.useState<Truck | null>(null);\r\n  const [isTruckLoading, setIsTruckLoading] = React.useState<boolean>(false);\r\n\r\n  const {\r\n    // isLoading: isTruckLoading,\r\n    // isFetching: isTruckFetching,\r\n    // data: truck,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: ['truckForMap', selectedTruckId],\r\n    queryFn: TruckQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    enabled: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!selectedTruckId) {\r\n      setSelectedTruck(null);\r\n    } else {\r\n      setIsTruckLoading(true);\r\n      const truckItem = truckListData?.find(\r\n        (truck) => truck.id === selectedTruckId,\r\n      );\r\n      const truckLocation = truckItem && truckItem?.lastLocation;\r\n\r\n      Promise.all([\r\n        refetch().then((res) => res.data),\r\n        truckLocation &&\r\n          (\r\n            geocoder?.geocode({\r\n              location: { lat: truckLocation[0], lng: truckLocation[1] },\r\n            }) || Promise.reject()\r\n          ).then((res) => {\r\n            const location = selectLocation(res.results);\r\n            if (location) {\r\n              return toStringLocation(location.address_components);\r\n            }\r\n            return '';\r\n          }),\r\n      ])\r\n        .then(([truck, location]) => {\r\n          if (truck) {\r\n            setSelectedTruck({ ...truck, lastCity: location || '' });\r\n          } else {\r\n            setSelectedTruck(null);\r\n          }\r\n        })\r\n        .catch(() => setSelectedTruck(null))\r\n        .finally(() => setIsTruckLoading(false));\r\n    }\r\n  }, [selectedTruckId]);\r\n\r\n  const handleClickOpen = (truckId: string) => {\r\n    setSelectedTruckId(truckId);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setSelectedTruckId('');\r\n  };\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 1, height: '100%', width: '100%' }}\r\n      >\r\n        <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n        {!geocoder ? null : (\r\n          <Map center={mapCenter} zoom={mapZoom} mapId={mapId}>\r\n            <MarkerClusterer>\r\n              {truckListData.map((truck) => {\r\n                return (\r\n                  <Marker\r\n                    key={truck.id}\r\n                    onCLick={() => handleClickOpen(truck.id)}\r\n                    /*animation={window?.google?.maps?.Animation?.DROP}*/\r\n                    title={`${truck.truckNumber}\\n${truck.status}`}\r\n                    position={{\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lat: truck.lastLocation[0],\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lng: truck.lastLocation[1],\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </MarkerClusterer>\r\n          </Map>\r\n        )}\r\n      </Box>\r\n      <Dialog\r\n        open={!!selectedTruck}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDialogClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>\r\n          <span>\r\n            TRUCK NUMBER: \r\n            <a href={`./trucks/view/${selectedTruck?.id}`} target=\"_blank\">\r\n              {selectedTruck?.truckNumber}\r\n            </a>\r\n          </span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"truck-status\">\r\n            {`CURRENT STATUS: ${selectedTruck?.status}`}\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact\">\r\n            <span>\r\n              {'MAIN CONTACT: '}\r\n              <b>{`${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    getType(selectedTruck?.coordinator || selectedTruck?.owner)\r\n                  : ''\r\n              }`}</b>\r\n              {` ${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                      .fullName\r\n                  : ''\r\n              }`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(\r\n                    ` ${\r\n                      selectedTruck?.coordinator || selectedTruck?.owner\r\n                        ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                          //@ts-ignore\r\n                          (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                            .fullName\r\n                        : ''\r\n                    } ${\r\n                      (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                        ?.phone || ''\r\n                    }`,\r\n                  );\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact-number\">\r\n            <span>\r\n              {'MAIN CONTACT #: '}\r\n              <a\r\n                href={\r\n                  selectedTruck?.coordinator || selectedTruck?.owner\r\n                    ? `tel:${\r\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                        //@ts-ignore\r\n                        (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                          .phone\r\n                      }`\r\n                    : undefined\r\n                }\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {(selectedTruck?.coordinator || selectedTruck?.owner)?.phone ||\r\n                  ''}\r\n              </a>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"last-location\">\r\n            <span>\r\n              {`LAST LOCATION #: ${selectedTruck?.lastCity}`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(`${selectedTruck?.lastCity}`);\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Loader visible={isTruckLoading} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Map({\r\n  center,\r\n  zoom,\r\n  mapId,\r\n  children,\r\n}: {\r\n  center: google.maps.LatLngLiteral;\r\n  zoom: number;\r\n  mapId: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const mapRef = React.useRef(null);\r\n  const [map, setMap] = React.useState<google.maps.Map>();\r\n\r\n  React.useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      setMap(\r\n        new window.google.maps.Map(mapRef.current, {\r\n          center,\r\n          zoom,\r\n          mapId,\r\n        }),\r\n      );\r\n    }\r\n  }, [mapRef, map]);\r\n\r\n  const child = React.Children.only(children);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: '100%', width: '100%' }} ref={mapRef} id=\"map\" />\r\n      {React.isValidElement(child) &&\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        React.cloneElement(child, { map })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarkerClusterer({\r\n  map,\r\n  children,\r\n}: {\r\n  map?: google.maps.Map;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [clusterer, setClusterer] = React.useState<MarkerClustererClass>();\r\n\r\n  React.useEffect(() => {\r\n    if (!clusterer && map) {\r\n      const newClusterer = new MarkerClustererClass({});\r\n      newClusterer.setMap(map);\r\n      setClusterer(newClusterer);\r\n    }\r\n  }, [map, clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer) {\r\n      clusterer.render();\r\n    }\r\n  }, [map, children, clusterer]);\r\n  clusterer?.render();\r\n\r\n  return (\r\n    <>\r\n      {React.Children.map(children, (child) => {\r\n        if (React.isValidElement(child)) {\r\n          // set the map prop on the child component\r\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n          // @ts-ignore\r\n          return React.cloneElement(child, { map, clusterer });\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Marker: React.FC<\r\n  google.maps.marker.AdvancedMarkerElementOptions & {\r\n    onCLick: () => void;\r\n    clusterer?: MarkerClustererClass;\r\n  }\r\n> = (options) => {\r\n  const { onCLick, clusterer, map, position, ...otherMarkerOptions } = options;\r\n  const [marker, setMarker] =\r\n    React.useState<google.maps.marker.AdvancedMarkerElement>();\r\n\r\n  React.useEffect(() => {\r\n    if (!marker) {\r\n      const newMarker = new window.google.maps.marker.AdvancedMarkerElement();\r\n      setMarker(newMarker);\r\n      newMarker.addListener('click', onCLick);\r\n    }\r\n  }, [marker]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.map = map || null;\r\n    }\r\n  }, [marker, map]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.position = position;\r\n    }\r\n  }, [marker, position && `${position?.lat},${position?.lng}`]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      clusterer?.addMarker(marker, false);\r\n    }\r\n  }, [marker, clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      Object.assign(marker, otherMarkerOptions);\r\n    }\r\n  }, [marker, otherMarkerOptions]);\r\n\r\n  return null;\r\n};\r\n"],"names":["GeneralMap","isLoading","isTruckListLoading","isFetching","isTruckListFetching","data","truckListData","useQuery","queryKey","queryFn","TrucksForMapQuery","keepPreviousData","retry","rows","filter","truck","lastLocation","_jsxs","_Fragment","children","_jsx","MapComponent","Loader","visible","Transition","React","props","ref","Slide","_objectSpread","direction","_ref","_ref4","mapCenter","center","mapZoom","zoom","length","lat","lng","geocoder","setGeocoder","selectedTruckId","setSelectedTruckId","selectedTruck","setSelectedTruck","isTruckLoading","setIsTruckLoading","refetch","TruckQuery","enabled","truckItem","find","id","truckLocation","Promise","all","then","res","geocode","location","reject","selectLocation","results","toStringLocation","address_components","_ref2","lastCity","catch","finally","handleDialogClose","Box","component","sx","flexGrow","p","height","width","Wrapper","getMapSettings","render","status","setSnackbarMessage","useSnackbar","setLoaderVisibility","useLoader","Status","LOADING","FAILURE","severity","message","SUCCESS","window","google","maps","Geocoder","Map","mapId","MarkerClusterer","map","Marker","onCLick","handleClickOpen","truckId","title","concat","truckNumber","position","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","href","target","DialogContent","DialogContentText","coordinator","owner","getType","fullName","IconButton","size","onClick","event","_ref3","stopPropagation","navigator","clipboard","writeText","phone","ContentCopy","undefined","DialogActions","Button","_ref5","mapRef","setMap","current","child","only","style","_ref6","clusterer","setClusterer","newClusterer","MarkerClustererClass","options","otherMarkerOptions","_objectWithoutProperties","_excluded","marker","setMarker","newMarker","AdvancedMarkerElement","addListener","addMarker","Object","assign"],"sourceRoot":""}