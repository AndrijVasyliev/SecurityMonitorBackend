{"version":3,"file":"static/js/384.6fc96482.chunk.js","mappings":"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","sources":["loads/createLoad.tsx","../node_modules/@mui/icons-material/esm/ArrowUpward.js","../node_modules/@mui/icons-material/esm/ArrowDownward.js","../node_modules/@mui/icons-material/esm/Remove.js","loads/timeFrame.tsx","loads/freight.tsx","loads/freightList.tsx","loads/stopPickUpDriversInfo.tsx","loads/stopPickUpDriversInfoList.tsx","utils/getStopStatus.ts","loads/stopPickUp.tsx","loads/stopDeliveryDriversInfo.tsx","loads/stopDeliveryDriversInfoList.tsx","loads/stopDelivery.tsx","loads/stops.tsx","utils/dataTypes.ts","utils/generateObjectId.ts","../node_modules/@mui/icons-material/esm/Person.js"],"sourcesContent":["import React from 'react';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport LocalShippingIcon from '@mui/icons-material/LocalShipping';\r\nimport FactoryIcon from '@mui/icons-material/Factory';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nimport StopsForm from './stops';\r\n\r\nimport {\r\n  Loader,\r\n  SearchField,\r\n  SearchMultiField,\r\n  SelectMultiField,\r\n  TextField,\r\n  SelectField,\r\n  FileList,\r\n} from '../components';\r\n\r\nimport { CustomersQuery, LoadCreate, TrucksQuery, UsersQuery } from '../api';\r\nimport { useSnackbar } from '../hooks';\r\nimport {\r\n  CreateLoad,\r\n  User,\r\n  Truck,\r\n  TruckTypes,\r\n  LoadStatuses,\r\n  LoadStatus,\r\n  Customer,\r\n  UnitsOfWeight,\r\n  UnitsOfLength,\r\n  StopType,\r\n  TimeFrameType,\r\n  UnitOfWeight,\r\n  UnitOfLength,\r\n  FormOnClose,\r\n  StopDeliveryStatuses,\r\n  StopPickUpStatuses,\r\n  StopPickupStatus,\r\n  StopDeliveryStatus,\r\n} from '../utils/dataTypes';\r\nimport { generateObjectId } from '../utils/generateObjectId';\r\n\r\nconst timeFramePickUpValidation = yup.object({\r\n  type: yup\r\n    .string()\r\n    .oneOf([TimeFrameType.FCFS, TimeFrameType.ASAP, TimeFrameType.APPT])\r\n    .required('Type is required'),\r\n  at: yup.date().when(['type'], (type, schema) => {\r\n    return (type[0] as unknown as TimeFrameType) === TimeFrameType.FCFS\r\n      ? schema.oneOf([undefined])\r\n      : schema.required('At is required');\r\n  }),\r\n  from: yup.date().when(['type'], (type, schema) => {\r\n    return (type[0] as unknown as TimeFrameType) !== TimeFrameType.FCFS\r\n      ? schema.oneOf([undefined])\r\n      : schema.required('From is required');\r\n  }),\r\n  to: yup.date().when(['type'], (type, schema) => {\r\n    return (type[0] as unknown as TimeFrameType) !== TimeFrameType.FCFS\r\n      ? schema.oneOf([undefined])\r\n      : schema.required('To is required');\r\n  }),\r\n});\r\n\r\nconst timeFrameDeliveryValidation = yup.object({\r\n  type: yup\r\n    .string()\r\n    .oneOf([TimeFrameType.FCFS, TimeFrameType.Direct, TimeFrameType.APPT])\r\n    .required('Type is required'),\r\n  at: yup.date().when(['type'], (type, schema) => {\r\n    return (type[0] as unknown as TimeFrameType) === TimeFrameType.FCFS\r\n      ? schema.oneOf([undefined])\r\n      : schema.required('At is required');\r\n  }),\r\n  from: yup.date().when(['type'], (type, schema) => {\r\n    return (type[0] as unknown as TimeFrameType) !== TimeFrameType.FCFS\r\n      ? schema.oneOf([undefined])\r\n      : schema.required('From is required');\r\n  }),\r\n  to: yup.date().when(['type'], (type, schema) => {\r\n    return (type[0] as unknown as TimeFrameType) !== TimeFrameType.FCFS\r\n      ? schema.oneOf([undefined])\r\n      : schema.required('To is required');\r\n  }),\r\n});\r\n\r\nconst freightValidationSchema = yup.object({\r\n  pieces: yup.number().integer().min(1).required('Pieces must be at least 1'),\r\n  unitOfWeight: yup\r\n    .string()\r\n    .oneOf(UnitsOfWeight)\r\n    .required('Unit of weight is required'),\r\n  weight: yup.number().moreThan(0).required('Weight is required'),\r\n  unitOfLength: yup\r\n    .string()\r\n    .oneOf(UnitsOfLength)\r\n    .required('Unit of length is required'),\r\n  length: yup.number().moreThan(0).required('Length is required'),\r\n});\r\n\r\nconst stopPickUpValidationSchema = yup.object({\r\n  status: yup\r\n    .string()\r\n    .oneOf(StopPickUpStatuses)\r\n    .required('Stop Pick Up Status is required'),\r\n  facility: yup\r\n    .object({ id: yup.string().required() })\r\n    .typeError('Enter correct facility')\r\n    .required('Facility is required'),\r\n  timeFrame: timeFramePickUpValidation.required('Time frame is required'),\r\n  freightList: yup\r\n    .array()\r\n    .of(freightValidationSchema.required('Freight is required'))\r\n    .required('Stop pickup must contain al least one freight'),\r\n  addInfo: yup.string(),\r\n});\r\n\r\nconst stopDeliveryValidationSchema = yup.object({\r\n  status: yup\r\n    .string()\r\n    .oneOf(StopDeliveryStatuses)\r\n    .required('Stop Delivery Status is required'),\r\n  facility: yup\r\n    .object({ id: yup.string().required() })\r\n    .typeError('Enter correct facility')\r\n    .required('Facility is required'),\r\n  timeFrame: timeFrameDeliveryValidation.required('Time frame is required'),\r\n  bolList: yup\r\n    .array()\r\n    .of(yup.string().required('Bol Id must not be empty'))\r\n    .min(1, 'Must be at least one Freight in Freight List')\r\n    .required('Must be at least one Freight in Freight List'),\r\n  addInfo: yup.string(),\r\n});\r\n\r\nconst validationSchema = yup.object({\r\n  status: yup.string().oneOf(LoadStatuses).required('Status is required'),\r\n  ref: yup\r\n    .array()\r\n    .of(yup.string().required('Ref must not be empty'))\r\n    .min(1, 'REF is required')\r\n    .max(3, 'REF must contain not more then 3 items')\r\n    .required('REF is required'),\r\n  stops: yup\r\n    .array()\r\n    .of(\r\n      yup.lazy((val) => {\r\n        switch (val.type) {\r\n          case StopType.PickUp:\r\n            return stopPickUpValidationSchema.required(\r\n              'Stop pickup is required',\r\n            );\r\n          case StopType.Delivery:\r\n            return stopDeliveryValidationSchema.required(\r\n              'Stop delivery is required',\r\n            );\r\n          default:\r\n            return yup\r\n              .mixed()\r\n              .oneOf([undefined])\r\n              .required('Type of stop must be \"Pick Up\" or \"Delivery\"');\r\n        }\r\n      }),\r\n    )\r\n    .min(2)\r\n    .required('Stops are required'),\r\n  weight: yup.string().required('Weight is required'),\r\n  truckType: yup\r\n    .array(yup.string().oneOf(TruckTypes))\r\n    .min(1, 'Select at list one')\r\n    .required('Truck Type is required'),\r\n  rate: yup.number().typeError('Rate must be a number'),\r\n  totalCharges: yup\r\n    .number()\r\n    .typeError('Total charges must be a number')\r\n    .required('Total charges is required'),\r\n  currency: yup.string().required('Currency is required'),\r\n  bookedByUser: yup\r\n    .object({ id: yup.string().required() })\r\n    .typeError('Enter correct user')\r\n    .required('Booked by is required'),\r\n  bookedByCompany: yup.string(),\r\n  assignTo: yup\r\n    .array(\r\n      yup\r\n        .object({ id: yup.string().required() })\r\n        .typeError('Enter correct user'),\r\n    )\r\n    .min(1, 'Assign To is required')\r\n    .required('Assign To is required'),\r\n  checkInAs: yup.string(),\r\n  truck: yup\r\n    .object({ id: yup.string().required() })\r\n    .typeError('Enter correct truck')\r\n    .nullable(),\r\n  bookedWith: yup\r\n    .object({ id: yup.string().required() })\r\n    .typeError('Enter correct customer')\r\n    .required('Booked with is required'),\r\n});\r\n\r\nconst initialTimeFramePickUpValues = {\r\n  type: TimeFrameType.APPT as TimeFrameType.APPT,\r\n  // from: null,\r\n  // to: null,\r\n  at: null,\r\n};\r\n\r\nconst initialTimeFrameDeliveryValues = {\r\n  type: TimeFrameType.APPT as TimeFrameType.APPT,\r\n  // from: null,\r\n  // to: null,\r\n  at: null,\r\n};\r\n\r\nexport const initialFreightValues = {\r\n  pieces: null,\r\n  unitOfWeight: 'LBS' as unknown as UnitOfWeight,\r\n  weight: null,\r\n  unitOfLength: 'IN' as unknown as UnitOfLength,\r\n  length: null,\r\n};\r\n\r\nexport const getInitialStopPickUpValues = () => ({\r\n  type: StopType.PickUp as StopType.PickUp,\r\n  status: 'New' as StopPickupStatus,\r\n  timeFrame: initialTimeFramePickUpValues,\r\n  facility: null,\r\n  freightList: [\r\n    {\r\n      freightId: generateObjectId(),\r\n      ...initialFreightValues,\r\n    },\r\n  ],\r\n  addInfo: undefined,\r\n});\r\n\r\nexport const getInitialStopDeliveryValues = () => ({\r\n  type: StopType.Delivery as StopType.Delivery,\r\n  status: 'New' as StopDeliveryStatus,\r\n  timeFrame: initialTimeFrameDeliveryValues,\r\n  facility: null,\r\n  addInfo: undefined,\r\n});\r\n\r\nconst initialValues = {\r\n  status: 'Available' as LoadStatus,\r\n  ref: [],\r\n  stops: [getInitialStopPickUpValues(), getInitialStopDeliveryValues()],\r\n  weight: undefined,\r\n  truckType: [],\r\n  rate: undefined,\r\n  totalCharges: undefined,\r\n  currency: 'USD',\r\n  bookedByUser: null,\r\n  bookedByCompany: undefined,\r\n  assignTo: [],\r\n  checkInAs: '4ULogistics',\r\n  truck: null,\r\n  bookedWith: null,\r\n};\r\n\r\nexport default function CreateLoadForm({ onClose }: { onClose: FormOnClose }) {\r\n  const queryClient = useQueryClient();\r\n  const setSnackbarMessage = useSnackbar();\r\n\r\n  const { mutate, isLoading } = useMutation(LoadCreate, {\r\n    onSuccess: (data) => {\r\n      setSnackbarMessage({\r\n        severity: 'success',\r\n        message: 'Created',\r\n      });\r\n      queryClient.invalidateQueries(['loads']);\r\n      onClose('Create', data);\r\n    },\r\n    onError: (error: Error) => {\r\n      setSnackbarMessage({\r\n        severity: 'error',\r\n        message: error instanceof Error ? error.message : JSON.stringify(error),\r\n      });\r\n    },\r\n  });\r\n\r\n  const formik = useFormik<CreateLoad>({\r\n    initialValues,\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutate(values);\r\n    },\r\n  });\r\n\r\n  /*const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    console.error(formik.errors);\r\n    formik.handleSubmit(e);\r\n  };*/\r\n\r\n  const handleClose = () => {\r\n    onClose('Close');\r\n  };\r\n\r\n  /*const handleReset = (e: any) => {\r\n    formik.handleReset(e);\r\n  };*/\r\n\r\n  return (\r\n    <Box sx={{ height: '100%' }}>\r\n      <form\r\n        onSubmit={formik.handleSubmit}\r\n        onReset={formik.handleReset}\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Box sx={{ p: 3, height: '100%' }}>\r\n          <Divider />\r\n          <Box\r\n            key=\"controls\"\r\n            sx={{\r\n              maxHeight: 'calc(100% - 70px)',\r\n              overflowX: 'hidden',\r\n              overflowY: 'scroll',\r\n            }}\r\n          >\r\n            <Box key=\"topControls\" sx={{ marginBottom: -1, p: 1 }}>\r\n              <SelectField\r\n                fieldName=\"status\"\r\n                label=\"Status\"\r\n                items={LoadStatuses}\r\n                disabledItems={LoadStatuses.filter(\r\n                  (status) => status !== 'Available',\r\n                )}\r\n                formik={formik}\r\n              />\r\n              <TextField\r\n                fieldName=\"ref\"\r\n                label=\"REF\"\r\n                multiline\r\n                maxRows={3}\r\n                formik={formik}\r\n              />\r\n              <StopsForm fieldName=\"stops\" formik={formik} />\r\n            </Box>\r\n            <Box\r\n              key=\"centerControls\"\r\n              sx={{ display: 'inline-flex', width: '100%' }}\r\n            >\r\n              <Box key=\"left\" sx={{ p: 1, width: '50%' }}>\r\n                <TextField fieldName=\"weight\" label=\"Weight\" formik={formik} />\r\n                <SelectMultiField\r\n                  fieldName=\"truckType\"\r\n                  label=\"Truck Type\"\r\n                  items={TruckTypes}\r\n                  formik={formik}\r\n                />\r\n                <SearchField<User>\r\n                  fieldName=\"bookedByUser\"\r\n                  label=\"Booked By\"\r\n                  getSelectedLabel={(selectedItem) =>\r\n                    `${selectedItem.fullName}`\r\n                  }\r\n                  getItemLabel={(item) => `${item.fullName}`}\r\n                  getItemSecondLabel={(item) => `${item.jobTitle}`}\r\n                  ListIcon={PersonIcon}\r\n                  entityType=\"User\"\r\n                  queryFn={UsersQuery}\r\n                  orderby=\"fullName\"\r\n                  order=\"asc\"\r\n                  formik={formik}\r\n                />\r\n                <SearchField<Customer>\r\n                  fieldName=\"bookedWith\"\r\n                  label=\"Booked With\"\r\n                  getSelectedLabel={(selectedItem) => `${selectedItem.name}`}\r\n                  getItemLabel={(item) => `${item.name}`}\r\n                  getItemSecondLabel={(item) => `${item.type}`}\r\n                  ListIcon={FactoryIcon}\r\n                  entityType=\"Customer\"\r\n                  queryFn={CustomersQuery}\r\n                  orderby=\"name\"\r\n                  order=\"asc\"\r\n                  formik={formik}\r\n                />\r\n                <SearchField<Truck>\r\n                  fieldName=\"truck\"\r\n                  label=\"Truck\"\r\n                  getSelectedLabel={(selectedItem) =>\r\n                    `${selectedItem.truckNumber}`\r\n                  }\r\n                  getItemLabel={(item) => `${item.truckNumber}`}\r\n                  getItemSecondLabel={(item) =>\r\n                    `${item.status}, ${item.licencePlate}`\r\n                  }\r\n                  ListIcon={LocalShippingIcon}\r\n                  entityType=\"Truck\"\r\n                  queryFn={TrucksQuery}\r\n                  orderby=\"truckNumber\"\r\n                  order=\"asc\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n              <Box key=\"right\" sx={{ p: 1, width: '50%' }}>\r\n                <TextField\r\n                  fieldName=\"rate\"\r\n                  label=\"Drivers Rate\"\r\n                  placeholder=\"Enter drivers rate\"\r\n                  number\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"totalCharges\"\r\n                  label=\"Total Rate\"\r\n                  placeholder=\"Enter total rate\"\r\n                  number\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"currency\"\r\n                  label=\"Currency\"\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"checkInAs\"\r\n                  label=\"Check In As\"\r\n                  formik={formik}\r\n                />\r\n                <TextField\r\n                  fieldName=\"bookedByCompany\"\r\n                  label=\"Booked By Company\"\r\n                  formik={formik}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              key=\"bottomControls\"\r\n              sx={{ p: 1, paddingBottom: 0, paddingTop: 0 }}\r\n            >\r\n              <SearchMultiField<User>\r\n                fieldName=\"assignTo\"\r\n                label=\"Assign To\"\r\n                getSelectedLabel={(selectedItem) => `${selectedItem.fullName}`}\r\n                getItemLabel={(item) => `${item.fullName}`}\r\n                getItemSecondLabel={(item) => `${item.jobTitle}`}\r\n                ListIcon={PersonIcon}\r\n                queryFn={UsersQuery}\r\n                orderby=\"fullName\"\r\n                order=\"asc\"\r\n                formik={formik}\r\n              />\r\n              <Box key=\"spacerRate\" sx={{ paddingBottom: 2, paddingTop: 2 }} />\r\n              <FileList\r\n                objectId={undefined}\r\n                objectType=\"Load\"\r\n                label=\"Rate Files\"\r\n                tags={{ [`${undefined}`]: 'Rate' }}\r\n                disabled\r\n              />\r\n              <Box key=\"spacerBill\" sx={{ paddingBottom: 2, paddingTop: 2 }} />\r\n              <FileList\r\n                objectId={undefined}\r\n                objectType=\"Load\"\r\n                label=\"Bill Files\"\r\n                tags={{ [`${undefined}`]: 'Bill' }}\r\n                disabled\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Divider />\r\n          <Box key=\"buttons\" sx={{ paddingTop: 3, display: 'flex' }}>\r\n            <Box key=\"left\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Create\r\n              </Button>\r\n            </Box>\r\n            <Box key=\"right\" sx={{ p: 1, paddingTop: 0, width: '50%' }}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n      <Loader visible={isLoading} />\r\n    </Box>\r\n  );\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8z\"\n}), 'ArrowUpward');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8z\"\n}), 'ArrowDownward');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { DateTimeField, SelectField } from '../components';\r\n\r\nimport { TimeFrameType } from '../utils/dataTypes';\r\n\r\nexport default function TimeFrameForm({\r\n  fieldName,\r\n  values,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly fieldName: string;\r\n  readonly values: TimeFrameType[];\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const formikValue = get(formik.values, fieldName);\r\n\r\n  React.useEffect(() => {\r\n    if (formikValue.type === TimeFrameType.FCFS) {\r\n      (formikValue.at || formikValue.at === null) &&\r\n        formik.setFieldValue(`${fieldName}.at`, undefined);\r\n      !formikValue.from && formik.setFieldValue(`${fieldName}.from`, null);\r\n      !formikValue.to && formik.setFieldValue(`${fieldName}.to`, null);\r\n    } else if (formikValue.type) {\r\n      !formikValue.at && formik.setFieldValue(`${fieldName}.at`, null);\r\n      (formikValue.from || formikValue.from === null) &&\r\n        formik.setFieldValue(`${fieldName}.from`, undefined);\r\n      (formikValue.to || formikValue.to === null) &&\r\n        formik.setFieldValue(`${fieldName}.to`, undefined);\r\n    }\r\n  }, [formikValue.type]);\r\n\r\n  return (\r\n    <Box key=\"inlineControls\" sx={{ display: 'flex', width: '100%' }}>\r\n      <Box key=\"typeContainer\" sx={{ paddingRight: 1, flex: 1 }}>\r\n        <SelectField\r\n          fieldName={`${fieldName}.type`}\r\n          label=\"Time frame type\"\r\n          items={values}\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n      </Box>\r\n      {formikValue.type === TimeFrameType.FCFS ? (\r\n        <>\r\n          <Box\r\n            key=\"fromContainer\"\r\n            sx={{ paddingRight: 1, paddingLeft: 1, flex: 1 }}\r\n          >\r\n            <DateTimeField\r\n              fieldName={`${fieldName}.from`}\r\n              label=\"From\"\r\n              minDateTime={new Date(Date.now() - 24 * 60 * 60 * 1000)}\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n          <Box key=\"toContainer\" sx={{ paddingLeft: 1, flex: 1 }}>\r\n            <DateTimeField\r\n              fieldName={`${fieldName}.to`}\r\n              label=\"To\"\r\n              minDateTime={new Date(Date.now() - 24 * 60 * 60 * 1000)}\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box key=\"atContainer\" sx={{ paddingLeft: 1, flex: 1 }}>\r\n          <DateTimeField\r\n            fieldName={`${fieldName}.at`}\r\n            label=\"At\"\r\n            minDateTime={new Date(Date.now() - 24 * 60 * 60 * 1000)}\r\n            disabled={disabled}\r\n            formik={formik}\r\n          />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\nimport { SelectField, TextField } from '../components';\r\n\r\nimport { UnitsOfLength, UnitsOfWeight } from '../utils/dataTypes';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\n\r\nexport default function FreightForm({\r\n  number,\r\n  fieldName,\r\n  onAdd,\r\n  onRemove,\r\n  removeDisabled,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly number: number;\r\n  readonly fieldName: string;\r\n  readonly onAdd: () => void;\r\n  readonly onRemove: () => void;\r\n  readonly removeDisabled?: boolean;\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const [expanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n  const handleExpandedChange = () => {\r\n    setExpanded((prev) => !prev);\r\n  };\r\n\r\n  const handleAdd = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onAdd();\r\n  };\r\n\r\n  const handleRemove = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onRemove();\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={expanded}\r\n      onChange={handleExpandedChange}\r\n      sx={{ backgroundColor: 'unset' }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ArrowDropDownIcon />}\r\n        aria-controls=\"freight-content\"\r\n        id=\"freight-header\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Typography>{`Freight #${number}`}</Typography>\r\n          <Box>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"add\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleAdd}\r\n              disabled={disabled}\r\n            >\r\n              <AddIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"remove\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleRemove}\r\n              disabled={disabled || removeDisabled}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <TextField\r\n          fieldName={`${fieldName}.pieces`}\r\n          label=\"Pieces\"\r\n          number\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n        <Box key=\"inlineControls\" sx={{ display: 'flex', width: '100%' }}>\r\n          <Box key=\"left\" sx={{ paddingRight: 1, flex: 1 }}>\r\n            <SelectField\r\n              fieldName={`${fieldName}.unitOfWeight`}\r\n              label=\"Unit Of Weight\"\r\n              items={UnitsOfWeight}\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n            <TextField\r\n              fieldName={`${fieldName}.weight`}\r\n              label=\"Weight\"\r\n              number\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n          <Box key=\"right\" sx={{ paddingLeft: 1, flex: 1 }}>\r\n            <SelectField\r\n              fieldName={`${fieldName}.unitOfLength`}\r\n              label=\"Unit Of Length\"\r\n              items={UnitsOfLength}\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n            <TextField\r\n              fieldName={`${fieldName}.length`}\r\n              label=\"Length\"\r\n              number\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { Freight } from '../utils/dataTypes';\r\nimport FreightForm from './freight';\r\nimport { initialFreightValues } from './createLoad';\r\nimport { generateObjectId } from '../utils/generateObjectId';\r\n\r\nexport default function FreightListForm({\r\n  fieldName,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly fieldName: string;\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const formikValue = get(formik.values, fieldName);\r\n\r\n  const onAdd = (index: number): void => {\r\n    const newValue: Freight = formikValue.toSpliced(index + 1, 0, {\r\n      freightId: generateObjectId(),\r\n      ...initialFreightValues,\r\n    }) as Freight;\r\n    formik.setFieldValue(fieldName, newValue);\r\n  };\r\n  const onRemove = (index: number): void => {\r\n    const newValue = formikValue.toSpliced(index, 1);\r\n    formik.setFieldValue(fieldName, newValue);\r\n  };\r\n\r\n  return (\r\n    <Box key=\"freightList\" sx={{ paddingBottom: 3, width: '100%' }}>\r\n      {formikValue.map((freight: Freight, index: number) => (\r\n        <FreightForm\r\n          key={index}\r\n          number={index + 1}\r\n          fieldName={`${fieldName}[${index}]`}\r\n          onAdd={() => onAdd(index)}\r\n          onRemove={() => onRemove(index)}\r\n          removeDisabled={formikValue.length === 1}\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { FileList, SelectField, TextField } from '../components';\r\n\r\nimport { Freight, UnitsOfWeight } from '../utils/dataTypes';\r\n\r\nexport default function StopPickUpDriversInfoForm({\r\n  number,\r\n  fieldName,\r\n  freightListPath,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly number: number;\r\n  readonly fieldName: string;\r\n  readonly freightListPath: string;\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const id = get(formik.values, 'id');\r\n  const driversInfoId = get(formik.values, `${fieldName}.driversInfoId`);\r\n  const freightList = get(formik.values, freightListPath) as\r\n    | Freight[]\r\n    | undefined;\r\n\r\n  const freightItems =\r\n    freightList\r\n      ?.filter((freight) => freight.freightId)\r\n      .map((freight, freightIndex: number) => ({\r\n        value: freight.freightId as string,\r\n        label: `Freight #${freightIndex + 1}: ${freight.pieces ? freight.pieces + ' pcs, ' : ''}${freight.length && freight.unitOfLength ? freight.length + ' ' + freight.unitOfLength + ' length, ' : ''}${freight.weight && freight.unitOfWeight ? freight.weight + ' ' + freight.unitOfWeight + ' weight' : ''}`,\r\n      })) || [];\r\n\r\n  const [expanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n  const handleExpandedChange = () => {\r\n    setExpanded((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={expanded}\r\n      onChange={handleExpandedChange}\r\n      sx={{ backgroundColor: 'unset' }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ArrowDropDownIcon />}\r\n        aria-controls=\"freight-content\"\r\n        id=\"freight-header\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Typography>{`Drivers Info #${number}`}</Typography>\r\n        </Box>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box key=\"inlineControls\" sx={{ display: 'flex', width: '100%' }}>\r\n          <Box key=\"left\" sx={{ paddingRight: 1, flex: 1 }}>\r\n            <SelectField\r\n              fieldName={`${fieldName}.bol`}\r\n              label=\"Bol\"\r\n              items={freightItems}\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n            <SelectField\r\n              fieldName={`${fieldName}.unitOfWeight`}\r\n              label=\"Unit Of Weight\"\r\n              items={UnitsOfWeight}\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n            <TextField\r\n              fieldName={`${fieldName}.weight`}\r\n              label=\"Weight\"\r\n              number\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n          <Box key=\"right\" sx={{ paddingLeft: 1, flex: 1 }}>\r\n            <TextField\r\n              fieldName={`${fieldName}.pieces`}\r\n              label=\"Pieces\"\r\n              number\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n            <TextField\r\n              fieldName={`${fieldName}.seal`}\r\n              label=\"Seal\"\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n            <SelectField\r\n              fieldName={`${fieldName}.addressIsCorrect`}\r\n              label=\"Address is correct\"\r\n              items={[\r\n                { value: true, label: 'Yes' },\r\n                { value: false, label: 'No' },\r\n              ]}\r\n              /*disabledItems={LoadStatuses.filter(\r\n              (status) =>\r\n                status !== 'Available' && status !== 'Not Available',\r\n            )}*/\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <FileList\r\n          objectId={id}\r\n          objectType=\"Load\"\r\n          label=\"Stop Drivers Files\"\r\n          tags={{ [`${driversInfoId}`]: 'StopPickUpDriversInfo' }}\r\n          disabled={disabled}\r\n        />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport StopPickUpDriversInfoForm from './stopPickUpDriversInfo';\r\n\r\nimport { Freight } from '../utils/dataTypes';\r\n\r\nexport default function StopPickUpDriversInfoListForm({\r\n  fieldName,\r\n  freightListPath,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly fieldName: string;\r\n  readonly freightListPath: string;\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const formikValue = get(formik.values, fieldName);\r\n\r\n  return (\r\n    <Box key=\"pickUpDriversInfo\" sx={{ paddingBottom: 3, width: '100%' }}>\r\n      {formikValue.map((freight: Freight, index: number) => (\r\n        <StopPickUpDriversInfoForm\r\n          key={index}\r\n          number={index + 1}\r\n          fieldName={`${fieldName}[${index}]`}\r\n          freightListPath={freightListPath}\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","export const getStatusText = (status: string | undefined) => {\r\n  switch (status) {\r\n    case undefined:\r\n    case 'New':\r\n    // case 'GTG':\r\n    case 'Completed':\r\n      return '';\r\n    default:\r\n      return `${status}`;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport WarehouseIcon from '@mui/icons-material/Warehouse';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\nimport TimeFrameForm from './timeFrame';\r\nimport FreightListForm from './freightList';\r\nimport StopPickUpDriversInfoListForm from './stopPickUpDriversInfoList';\r\nimport { SearchField, TextField, SelectField } from '../components';\r\n\r\nimport { FacilitiesQuery } from '../api';\r\nimport {\r\n  Facility,\r\n  StopPickUpStatuses,\r\n  TimeFrameType,\r\n} from '../utils/dataTypes';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { getStatusText } from '../utils/getStopStatus';\r\n\r\nexport default function StopPickUpForm({\r\n  stopNumber,\r\n  pickUpNumber,\r\n  fieldName,\r\n  onUp,\r\n  onDown,\r\n  onAdd,\r\n  onRemove,\r\n  upDisabled,\r\n  downDisabled,\r\n  removeDisabled,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly stopNumber: number;\r\n  readonly pickUpNumber: number;\r\n  readonly fieldName: string;\r\n  readonly onUp: () => void;\r\n  readonly onDown: () => void;\r\n  readonly onAdd: () => void;\r\n  readonly onRemove: () => void;\r\n  readonly upDisabled?: boolean;\r\n  readonly downDisabled?: boolean;\r\n  readonly removeDisabled?: boolean;\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const status = get(formik.values, `${fieldName}.status`);\r\n  const driversInfo = get(formik.values, `${fieldName}.driversInfo`);\r\n  const statusText = getStatusText(status);\r\n  const isStatusDisabled = disabled; // ||\r\n  // StopPickUpStatuses.at(0) === status ||\r\n  // StopPickUpStatuses.at(-1) === status;\r\n\r\n  const [expanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n  const handleExpandedChange = () => {\r\n    setExpanded((prev) => !prev);\r\n  };\r\n\r\n  const handleUp = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onUp();\r\n  };\r\n\r\n  const handleDown = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onDown();\r\n  };\r\n\r\n  const handleAdd = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onAdd();\r\n  };\r\n\r\n  const handleRemove = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onRemove();\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={expanded}\r\n      onChange={handleExpandedChange}\r\n      sx={{ backgroundColor: 'unset' }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ArrowDropDownIcon />}\r\n        aria-controls=\"stop-pickup-content\"\r\n        id=\"stop-pickup-header\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Typography\r\n            color={\r\n              status === 'New'\r\n                ? 'new'\r\n                : status === 'Completed'\r\n                  ? 'completed'\r\n                  : 'inProgress'\r\n            }\r\n          >{`Stop (${stopNumber})${\r\n            statusText ? ' [' + statusText + '] ' : ' '\r\n          }PickUp #${pickUpNumber}`}</Typography>\r\n          <Box>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"up\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleUp}\r\n              disabled={disabled || upDisabled}\r\n            >\r\n              <ArrowUpwardIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"down\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleDown}\r\n              disabled={disabled || downDisabled}\r\n            >\r\n              <ArrowDownwardIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"add\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleAdd}\r\n              disabled={disabled}\r\n            >\r\n              <AddIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"remove\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleRemove}\r\n              disabled={disabled || removeDisabled}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box key=\"inlineControls\" sx={{ display: 'flex', width: '100%' }}>\r\n          <Box key=\"statusContainer\" sx={{ paddingRight: 1, flex: 1 }}>\r\n            <SelectField\r\n              fieldName={`${fieldName}.status`}\r\n              label=\"Status\"\r\n              items={StopPickUpStatuses}\r\n              /*disabledItems={LoadStatuses.filter(\r\n              (status) =>\r\n                status !== 'Available' && status !== 'Not Available',\r\n            )}*/\r\n              disabled={isStatusDisabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n          <Box key=\"facilityContainer\" sx={{ paddingLeft: 1, flex: 1 }}>\r\n            <SearchField<Facility>\r\n              fieldName={`${fieldName}.facility`}\r\n              label=\"Facility\"\r\n              getSelectedLabel={(selectedItem) => `${selectedItem.name}`}\r\n              getItemLabel={(item) => `${item.name}`}\r\n              getItemSecondLabel={(item) => `${item.address}`}\r\n              ListIcon={WarehouseIcon}\r\n              entityType=\"Facility\"\r\n              queryFn={FacilitiesQuery}\r\n              startEmpty={false}\r\n              orderby=\"name\"\r\n              order=\"asc\"\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <TimeFrameForm\r\n          fieldName={`${fieldName}.timeFrame`}\r\n          values={[TimeFrameType.FCFS, TimeFrameType.APPT, TimeFrameType.ASAP]}\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n        <FreightListForm\r\n          fieldName={`${fieldName}.freightList`}\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n        <TextField\r\n          fieldName={`${fieldName}.addInfo`}\r\n          label=\"Additional stop info\"\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n        {!driversInfo || !driversInfo.length ? null : (\r\n          <StopPickUpDriversInfoListForm\r\n            fieldName={`${fieldName}.driversInfo`}\r\n            freightListPath={`${fieldName}.freightList`}\r\n            disabled={disabled}\r\n            formik={formik}\r\n          />\r\n        )}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { FileList, SelectField, TextField } from '../components';\r\nimport { StopDelivery, StopPickUp, StopType } from '../utils/dataTypes';\r\n\r\nexport default function StopDeliveryDriversInfoForm({\r\n  number,\r\n  fieldName,\r\n  bolListPath,\r\n  stopsPath,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly number: number;\r\n  readonly fieldName: string;\r\n  readonly bolListPath: string;\r\n  readonly stopsPath: string;\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const id = get(formik.values, 'id');\r\n  const driversInfoId = get(formik.values, `${fieldName}.driversInfoId`);\r\n  const bolList = get(formik.values, bolListPath) as string[] | undefined;\r\n  const stops = get(formik.values, stopsPath) as (StopPickUp | StopDelivery)[];\r\n\r\n  const freightItems = stops\r\n    ?.filter((stop) => stop.type === StopType.PickUp)\r\n    .flatMap((stop, stopIndex: number) =>\r\n      stop.freightList\r\n        .filter((freight) => freight.freightId)\r\n        .map((freight, freightIndex: number) => ({\r\n          value: freight.freightId as string,\r\n          label: `Freight #${freightIndex + 1} (Stop PickUp#${stopIndex + 1}): ${freight.pieces ? freight.pieces + ' pcs, ' : ''}${freight.length && freight.unitOfLength ? freight.length + ' ' + freight.unitOfLength + ' length, ' : ''}${freight.weight && freight.unitOfWeight ? freight.weight + ' ' + freight.unitOfWeight + ' weight' : ''}`,\r\n        }))\r\n        .filter(\r\n          (freightItem) => bolList && bolList.includes(freightItem.value),\r\n        ),\r\n    );\r\n\r\n  const [expanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n  const handleExpandedChange = () => {\r\n    setExpanded((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={expanded}\r\n      onChange={handleExpandedChange}\r\n      sx={{ backgroundColor: 'unset' }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ArrowDropDownIcon />}\r\n        aria-controls=\"freight-content\"\r\n        id=\"freight-header\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Typography>{`Drivers Info #${number}`}</Typography>\r\n        </Box>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box key=\"inlineControls\" sx={{ display: 'flex', width: '100%' }}>\r\n          <Box key=\"left\" sx={{ paddingRight: 1, flex: 1 }}>\r\n            <SelectField\r\n              fieldName={`${fieldName}.bol`}\r\n              label=\"Bol\"\r\n              items={freightItems}\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n          <Box key=\"right\" sx={{ paddingLeft: 1, flex: 1 }}>\r\n            <TextField\r\n              fieldName={`${fieldName}.signedBy`}\r\n              label=\"Signed By\"\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <FileList\r\n          objectId={id}\r\n          objectType=\"Load\"\r\n          label=\"Stop Drivers Files\"\r\n          tags={{ [`${driversInfoId}`]: 'StopDeliveryDriversInfo' }}\r\n          disabled={disabled}\r\n        />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport StopDeliveryDriversInfoForm from './stopDeliveryDriversInfo';\r\n\r\nimport { Freight } from '../utils/dataTypes';\r\n\r\nexport default function StopDeliveryDriversInfoListForm({\r\n  fieldName,\r\n  bolListPath,\r\n  stopsPath,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly fieldName: string;\r\n  readonly bolListPath: string;\r\n  readonly stopsPath: string;\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const formikValue = get(formik.values, fieldName);\r\n\r\n  return (\r\n    <Box key=\"deliveryDriversInfo\" sx={{ paddingBottom: 3, width: '100%' }}>\r\n      {formikValue.map((freight: Freight, index: number) => (\r\n        <StopDeliveryDriversInfoForm\r\n          key={index}\r\n          number={index + 1}\r\n          fieldName={`${fieldName}[${index}]`}\r\n          bolListPath={bolListPath}\r\n          stopsPath={stopsPath}\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport WarehouseIcon from '@mui/icons-material/Warehouse';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\nimport TimeFrameForm from './timeFrame';\r\nimport StopDeliveryDriversInfoListForm from './stopDeliveryDriversInfoList';\r\nimport {\r\n  SearchField,\r\n  SelectField,\r\n  SelectMultiField,\r\n  TextField,\r\n} from '../components';\r\n\r\nimport { FacilitiesQuery } from '../api';\r\nimport {\r\n  Facility,\r\n  StopDelivery,\r\n  StopDeliveryStatuses,\r\n  StopPickUp,\r\n  StopType,\r\n  TimeFrameType,\r\n} from '../utils/dataTypes';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { getStatusText } from '../utils/getStopStatus';\r\n\r\nexport default function StopDeliveryForm({\r\n  stopNumber,\r\n  deliveryNumber,\r\n  fieldName,\r\n  stopsPath,\r\n  onUp,\r\n  onDown,\r\n  onAdd,\r\n  onRemove,\r\n  upDisabled,\r\n  downDisabled,\r\n  removeDisabled,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly stopNumber: number;\r\n  readonly deliveryNumber: number;\r\n  readonly fieldName: string;\r\n  readonly stopsPath: string;\r\n  readonly onUp: () => void;\r\n  readonly onDown: () => void;\r\n  readonly onAdd: () => void;\r\n  readonly onRemove: () => void;\r\n  readonly upDisabled?: boolean;\r\n  readonly downDisabled?: boolean;\r\n  readonly removeDisabled?: boolean;\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const status = get(formik.values, `${fieldName}.status`);\r\n  const stops = get(formik.values, stopsPath) as (StopPickUp | StopDelivery)[];\r\n  const driversInfo = get(formik.values, `${fieldName}.driversInfo`);\r\n  const statusText = getStatusText(status);\r\n  const isStatusDisabled = disabled; // ||\r\n  // StopDeliveryStatuses.at(0) === status ||\r\n  // StopDeliveryStatuses.at(-1) === status;\r\n\r\n  const freightItems = stops\r\n    ?.filter((stop) => stop.type === StopType.PickUp)\r\n    .flatMap((stop, stopIndex: number) =>\r\n      stop.freightList\r\n        .filter((freight) => freight.freightId)\r\n        .map((freight, freightIndex: number) => ({\r\n          value: freight.freightId as string,\r\n          label: `Freight #${freightIndex + 1} (Stop PickUp#${stopIndex + 1}): ${freight.pieces ? freight.pieces + ' pcs, ' : ''}${freight.length && freight.unitOfLength ? freight.length + ' ' + freight.unitOfLength + ' length, ' : ''}${freight.weight && freight.unitOfWeight ? freight.weight + ' ' + freight.unitOfWeight + ' weight' : ''}`,\r\n        })),\r\n    );\r\n\r\n  const [expanded, setExpanded] = React.useState<boolean>(false);\r\n\r\n  const handleExpandedChange = () => {\r\n    setExpanded((prev) => !prev);\r\n  };\r\n\r\n  const handleUp = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onUp();\r\n  };\r\n\r\n  const handleDown = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onDown();\r\n  };\r\n\r\n  const handleAdd = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onAdd();\r\n  };\r\n\r\n  const handleRemove = (e: React.SyntheticEvent) => {\r\n    stopPropagation(e);\r\n    onRemove();\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      expanded={expanded}\r\n      onChange={handleExpandedChange}\r\n      sx={{ backgroundColor: 'unset' }}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ArrowDropDownIcon />}\r\n        aria-controls=\"stop-delivery-content\"\r\n        id=\"stop-delivery-header\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Typography\r\n            color={\r\n              status === 'New'\r\n                ? 'new'\r\n                : status === 'Completed'\r\n                  ? 'completed'\r\n                  : 'inProgress'\r\n            }\r\n          >{`Stop (${stopNumber})${\r\n            statusText ? ' [' + statusText + '] ' : ' '\r\n          }Delivery #${deliveryNumber}`}</Typography>\r\n          <Box>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"up\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleUp}\r\n              disabled={disabled || upDisabled}\r\n            >\r\n              <ArrowUpwardIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"down\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleDown}\r\n              disabled={disabled || downDisabled}\r\n            >\r\n              <ArrowDownwardIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"add\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleAdd}\r\n              disabled={disabled}\r\n            >\r\n              <AddIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              component=\"label\"\r\n              aria-label=\"remove\"\r\n              sx={{ padding: 0 }}\r\n              onClickCapture={handleRemove}\r\n              disabled={disabled || removeDisabled}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box key=\"inlineControls\" sx={{ display: 'flex', width: '100%' }}>\r\n          <Box key=\"statusContainer\" sx={{ paddingRight: 1, flex: 1 }}>\r\n            <SelectField\r\n              fieldName={`${fieldName}.status`}\r\n              label=\"Status\"\r\n              items={StopDeliveryStatuses}\r\n              /*disabledItems={LoadStatuses.filter(\r\n              (status) =>\r\n                status !== 'Available' && status !== 'Not Available',\r\n            )}*/\r\n              disabled={isStatusDisabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n          <Box key=\"facilityContainer\" sx={{ paddingLeft: 1, flex: 1 }}>\r\n            <SearchField<Facility>\r\n              fieldName={`${fieldName}.facility`}\r\n              label=\"Facility\"\r\n              getSelectedLabel={(selectedItem) => `${selectedItem.name}`}\r\n              getItemLabel={(item) => `${item.name}`}\r\n              getItemSecondLabel={(item) => `${item.address}`}\r\n              ListIcon={WarehouseIcon}\r\n              entityType=\"Facility\"\r\n              queryFn={FacilitiesQuery}\r\n              startEmpty={false}\r\n              orderby=\"name\"\r\n              order=\"asc\"\r\n              disabled={disabled}\r\n              formik={formik}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <TimeFrameForm\r\n          fieldName={`${fieldName}.timeFrame`}\r\n          values={[\r\n            TimeFrameType.FCFS,\r\n            TimeFrameType.APPT,\r\n            TimeFrameType.Direct,\r\n          ]}\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n        <SelectMultiField\r\n          fieldName={`${fieldName}.bolList`}\r\n          label=\"Freight List\"\r\n          items={freightItems}\r\n          /*disabledItems={LoadStatuses.filter(\r\n          (status) =>\r\n            status !== 'Available' && status !== 'Not Available',\r\n        )}*/\r\n          disabled={isStatusDisabled}\r\n          formik={formik}\r\n        />\r\n        <TextField\r\n          fieldName={`${fieldName}.addInfo`}\r\n          label=\"Additional stop info\"\r\n          disabled={disabled}\r\n          formik={formik}\r\n        />\r\n        {!driversInfo || !driversInfo.length ? null : (\r\n          <StopDeliveryDriversInfoListForm\r\n            fieldName={`${fieldName}.driversInfo`}\r\n            bolListPath={`${fieldName}.bolList`}\r\n            stopsPath={stopsPath}\r\n            disabled={disabled}\r\n            formik={formik}\r\n          />\r\n        )}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport { useFormik } from 'formik/dist/Formik';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport StopPickUpForm from './stopPickUp';\r\nimport StopDeliveryForm from './stopDelivery';\r\nimport {\r\n  getInitialStopDeliveryValues,\r\n  getInitialStopPickUpValues,\r\n} from './createLoad';\r\nimport { StopDelivery, StopPickUp, StopType } from '../utils/dataTypes';\r\n\r\nexport default function StopsForm({\r\n  fieldName,\r\n  disabled,\r\n  formik,\r\n}: {\r\n  readonly fieldName: string;\r\n  // stops: (StopPickUp | StopDelivery)[];\r\n  readonly disabled?: boolean;\r\n  readonly formik: ReturnType<typeof useFormik<any>>;\r\n}) {\r\n  const stops = get(formik.values, fieldName) as (StopPickUp | StopDelivery)[];\r\n\r\n  const onUp = (index: number): void => {\r\n    const upElement = stops[index - 1];\r\n    const thisElement = stops[index];\r\n    const newValue = stops.toSpliced(index - 1, 2, thisElement, upElement);\r\n    formik.setFieldValue(fieldName, newValue);\r\n  };\r\n  const onDown = (index: number): void => {\r\n    const thisElement = stops[index];\r\n    const downElement = stops[index + 1];\r\n    const newValue = stops.toSpliced(index, 2, downElement, thisElement);\r\n    formik.setFieldValue(fieldName, newValue);\r\n  };\r\n  const onAddPickUp = (index: number): void => {\r\n    const newValue = stops.toSpliced(\r\n      index + 1,\r\n      0,\r\n      getInitialStopPickUpValues(),\r\n    );\r\n    formik.setFieldValue(fieldName, newValue);\r\n  };\r\n  const onAddDelivery = (index: number): void => {\r\n    const newValue = stops.toSpliced(\r\n      index + 1,\r\n      0,\r\n      getInitialStopDeliveryValues(),\r\n    );\r\n    formik.setFieldValue(fieldName, newValue);\r\n  };\r\n  const onRemove = (index: number): void => {\r\n    const newValue = stops.toSpliced(index, 1);\r\n    formik.setFieldValue(fieldName, newValue);\r\n  };\r\n\r\n  return (\r\n    <Box key=\"stops\" sx={{ paddingBottom: 3, width: '100%' }}>\r\n      {!stops\r\n        ? null\r\n        : stops.map((stop, index) => {\r\n            switch (stop.type) {\r\n              case StopType.PickUp:\r\n                return (\r\n                  <StopPickUpForm\r\n                    key={index}\r\n                    stopNumber={index + 1}\r\n                    pickUpNumber={\r\n                      stops\r\n                        .slice(0, index + 1)\r\n                        .filter((stop) => stop.type === StopType.PickUp).length\r\n                    }\r\n                    fieldName={`${fieldName}[${index}]`}\r\n                    onUp={() => onUp(index)}\r\n                    onDown={() => onDown(index)}\r\n                    onAdd={() => onAddPickUp(index)}\r\n                    onRemove={() => onRemove(index)}\r\n                    upDisabled={index === 0}\r\n                    downDisabled={\r\n                      index === stops.length - 2 ||\r\n                      (index === 0 && stops[1].type === StopType.Delivery)\r\n                    }\r\n                    removeDisabled={index === 0}\r\n                    disabled={disabled}\r\n                    formik={formik}\r\n                  />\r\n                );\r\n              case StopType.Delivery:\r\n                return (\r\n                  <StopDeliveryForm\r\n                    key={index}\r\n                    stopNumber={index + 1}\r\n                    deliveryNumber={\r\n                      stops\r\n                        .slice(0, index + 1)\r\n                        .filter((stop) => stop.type === StopType.Delivery)\r\n                        .length\r\n                    }\r\n                    fieldName={`${fieldName}[${index}]`}\r\n                    stopsPath={`${fieldName}`}\r\n                    onUp={() => onUp(index)}\r\n                    onDown={() => onDown(index)}\r\n                    onAdd={() => onAddDelivery(index)}\r\n                    onRemove={() => onRemove(index)}\r\n                    upDisabled={\r\n                      (index === stops.length - 1 &&\r\n                        stops[stops.length - 2].type === StopType.PickUp) ||\r\n                      index === 1\r\n                    }\r\n                    downDisabled={index === stops.length - 1}\r\n                    removeDisabled={index === stops.length - 1}\r\n                    disabled={disabled}\r\n                    formik={formik}\r\n                  />\r\n                );\r\n            }\r\n          })}\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AlertColor } from '@mui/material/Alert/Alert';\r\n\r\nexport const EntityTypes = [\r\n  'Truck',\r\n  'Load',\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n  'Location',\r\n  'User',\r\n  'Customer',\r\n  'Facility',\r\n] as const;\r\n\r\nexport const LangPriorities = ['EN', 'UA', 'ES', 'RU'] as const;\r\n\r\nexport const PersonTypes = [\r\n  'Owner',\r\n  'OwnerDriver',\r\n  'Coordinator',\r\n  'CoordinatorDriver',\r\n  'Driver',\r\n] as const;\r\n\r\nexport const UserRoles = ['Admin', 'Super Admin'] as const;\r\n\r\nexport const CustomerTypes = [\r\n  'BROKER DOMESTIC',\r\n  'BROKER INTERNATIONAL',\r\n  'FREIGHT FORWARDER DOMESTIC',\r\n  'FREIGHT FORWARDER INTERNATIONAL',\r\n  'SHIPPER/CONSIGNEE DOMESTIC',\r\n  'SHIPPER/CONSIGNEE INTERNATIONAL',\r\n  'OTHER',\r\n] as const;\r\n\r\nexport const TruckTypes = [\r\n  'Cargo van',\r\n  'Reefer van',\r\n  'Box truck',\r\n  'Box truck Reefer',\r\n  'Straight truck',\r\n  'Hotshot',\r\n  'Tented box',\r\n] as const;\r\n\r\nexport const TruckStatuses = [\r\n  'Available',\r\n  'Not Available',\r\n  'Will be available',\r\n  'On route',\r\n] as const;\r\n\r\nexport const TruckCrossborders = ['Yes', 'No'] as const;\r\n\r\nexport const TruckCertificates = [\r\n  'Hazmat',\r\n  'Tsa',\r\n  'TWIC',\r\n  'Tanker Endorsement',\r\n] as const;\r\n\r\nexport const TruckEquipments = [\r\n  'Dock height risers',\r\n  'Air ride',\r\n  'Lift gate',\r\n  'Keep from freezing',\r\n  'ICC bar',\r\n  'Vertical E-track',\r\n  'Horizontal E-track',\r\n  'Pallet jack',\r\n  'PPE',\r\n  'Ramps',\r\n  'Straps',\r\n  'Loads bars',\r\n  'Blankets',\r\n  'Pads',\r\n  'Fire extinguisher',\r\n  'Metal hooks',\r\n  'Reefer',\r\n  'Heater',\r\n] as const;\r\n\r\nexport const LoadStatuses = [\r\n  'Available',\r\n  'Planned',\r\n  'In Progress',\r\n  'TONU',\r\n  'Cancelled',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const StopPickUpStatuses = [\r\n  'New',\r\n  'On route to PU',\r\n  'On site PU',\r\n  'Loaded, Waiting GTG',\r\n  'GTG',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const StopDeliveryStatuses = [\r\n  'New',\r\n  'On route to DEL',\r\n  'On site DEL',\r\n  'Unloaded, Waiting GTG',\r\n  'GTG',\r\n  'Completed',\r\n] as const;\r\n\r\nexport const UnitsOfWeight = ['LBS', 'KG', 'TON'] as const;\r\n\r\nexport const UnitsOfLength = ['FT', 'IN', 'M', 'CM'] as const;\r\n\r\nexport const PUSH_STATES = [\r\n  'New',\r\n  'Ready for send',\r\n  'Processing send',\r\n  'Sent for deliver',\r\n  'Error sending',\r\n  'Ready for receiving receipt',\r\n  'Processing receiving receipt',\r\n  'Sent to user',\r\n  'Error from receipt',\r\n  'Error receiving receipt',\r\n] as const;\r\n\r\nexport const EMAIL_STATES = [\r\n  'New',\r\n  'Ready',\r\n  'Processing',\r\n  'Sent',\r\n  'Error',\r\n] as const;\r\n\r\nexport const EMAIL_TO_TYPES = ['User', 'Person'] as const;\r\n\r\nexport const FILE_OF_TYPES = ['Truck', 'Person', 'Load'] as const;\r\n\r\nexport type Order = 'asc' | 'desc';\r\nexport type QueryKey<T> = readonly [\r\n  key: string,\r\n  page: number,\r\n  rowsPerPage: number,\r\n  orderBy?: string,\r\n  order?: Order,\r\n  queryParams?: T,\r\n];\r\n// export type BaseQuery = {\r\n//   readonly queryKey: QueryKey;\r\n// };\r\nexport type Query<T> = {\r\n  readonly queryKey: QueryKey<T>;\r\n};\r\nexport type QuerySingleKey = readonly [key: string, recordId: string];\r\nexport type QuerySingle = {\r\n  readonly queryKey: QuerySingleKey;\r\n};\r\nexport type Result<T> = {\r\n  items: T[];\r\n  limit: number;\r\n  offset: number;\r\n  total: number;\r\n};\r\nexport type QueryFn<SearchType = any, ResultType = any> = (\r\n  query: Query<{ search: SearchType }>,\r\n) => Promise<Result<ResultType>>;\r\n\r\nexport type UserDataType = {\r\n  username: string;\r\n  password: string;\r\n} & Partial<User>;\r\nexport interface AuthContextType {\r\n  user: UserDataType | null;\r\n  signin: (\r\n    username: string,\r\n    password: string,\r\n    callback: (user: UserDataType | null) => void,\r\n  ) => void;\r\n  signout: (callback: VoidFunction) => void;\r\n}\r\nexport type SnackbarMessage = {\r\n  message: string;\r\n  severity: AlertColor;\r\n  handleClose?: (event?: React.SyntheticEvent | Event, reason?: string) => void;\r\n};\r\nexport type EntityType = (typeof EntityTypes)[number];\r\nexport type PersonType = (typeof PersonTypes)[number];\r\nexport type LangPriority = (typeof LangPriorities)[number];\r\nexport type UserRole = (typeof UserRoles)[number];\r\nexport type CustomerType = (typeof CustomerTypes)[number];\r\nexport type TruckType = (typeof TruckTypes)[number];\r\nexport type TruckStatus = (typeof TruckStatuses)[number];\r\nexport type TruckCrossborder = (typeof TruckCrossborders)[number];\r\nexport type TruckCertificate = (typeof TruckCertificates)[number];\r\nexport type TruckEquipment = (typeof TruckEquipments)[number];\r\nexport type LoadStatus = (typeof LoadStatuses)[number];\r\nexport type StopPickupStatus = (typeof StopPickUpStatuses)[number];\r\nexport type StopDeliveryStatus = (typeof StopDeliveryStatuses)[number];\r\nexport type UnitOfWeight = (typeof UnitsOfWeight)[number];\r\nexport type UnitOfLength = (typeof UnitsOfLength)[number];\r\nexport type PushState = (typeof PUSH_STATES)[number];\r\nexport type EmailState = (typeof EMAIL_STATES)[number];\r\nexport type EmailToType = (typeof EMAIL_TO_TYPES)[number];\r\nexport type FileOfType = (typeof FILE_OF_TYPES)[number];\r\n\r\nexport type GeoPoint = [number, number];\r\n\r\nexport type FormOnClose<T = any> = (\r\n  eventType: 'Create' | 'Edit' | 'Save' | 'Close',\r\n  affectedEntity?: T,\r\n) => void;\r\n\r\nexport interface Person {\r\n  id: string;\r\n  fullName: string;\r\n  type: PersonType;\r\n  phone?: string;\r\n  email?: string;\r\n}\r\n\r\nexport interface Owner extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  ownTrucks?: Truck[];\r\n  coordinators?: Coordinator[];\r\n  drivers?: Driver[];\r\n}\r\n\r\nexport interface CreateOwner {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwner extends Partial<CreateOwner> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateOwnerDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateOwnerDriver extends Partial<CreateOwnerDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Coordinator extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email: string;\r\n  address: string;\r\n  coordinateTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateCoordinator {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinator extends Partial<CreateCoordinator> {\r\n  id: string;\r\n}\r\n\r\nexport interface CreateCoordinatorDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  snn?: string;\r\n  company?: string;\r\n  insurancePolicy?: string;\r\n  insurancePolicyExp?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateCoordinatorDriver\r\n  extends Partial<CreateCoordinatorDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Driver extends Person {\r\n  type: PersonType;\r\n  phone: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  address?: string;\r\n  driveTrucks?: Truck[];\r\n  owner: Owner;\r\n}\r\n\r\nexport interface CreateDriver {\r\n  fullName?: string;\r\n  birthDate?: Date;\r\n  citizenship?: string;\r\n  languagePriority?: LangPriority;\r\n  driverLicenceNumber?: string;\r\n  driverLicenceState?: string;\r\n  driverLicenceExp?: Date;\r\n  idDocId?: string;\r\n  idDocType?: string;\r\n  idDocExp?: Date;\r\n  hiredBy?: string;\r\n  hireDate?: Date;\r\n  address?: string;\r\n  phone?: string;\r\n  phone2?: string;\r\n  email?: string;\r\n  emergencyContactName?: string;\r\n  emergencyContactRel?: string;\r\n  emergencyContactPhone?: string;\r\n  appLogin?: string;\r\n  appPass?: string;\r\n  owner?: Owner | null;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UpdateDriver extends Partial<CreateDriver> {\r\n  id: string;\r\n}\r\n\r\nexport interface Truck {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n  lastCity?: string;\r\n  locationUpdatedBy?: string;\r\n  locationUpdatedAt?: string;\r\n  availabilityLocation?: GeoPoint;\r\n  availabilityAtLocal?: string;\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  crossborder: TruckCrossborder;\r\n  certificate: TruckCertificate;\r\n  type: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight: string;\r\n  make: string;\r\n  model: string;\r\n  year: number;\r\n  color: string;\r\n  vinCode: string;\r\n  licencePlate: string;\r\n  insideDims: string;\r\n  doorDims?: string;\r\n  rpmAvg?: number;\r\n  owner?: Owner;\r\n  coordinator?: Coordinator;\r\n  driver?: Driver;\r\n  reservedAt?: string; //Date;\r\n  reservedBy?: User;\r\n}\r\n\r\nexport interface TruckForMap {\r\n  id: string;\r\n  truckNumber: number;\r\n  status: TruckStatus;\r\n  lastLocation?: GeoPoint;\r\n}\r\n\r\nexport interface CreateTruck {\r\n  truckNumber?: number;\r\n  status?: TruckStatus;\r\n  crossborder?: TruckCrossborder;\r\n  certificate?: TruckCertificate;\r\n  type?: TruckType;\r\n  equipment?: TruckEquipment[];\r\n  payload?: number;\r\n  grossWeight?: string;\r\n  make?: string;\r\n  model?: string;\r\n  year?: number;\r\n  color?: string;\r\n  vinCode?: string;\r\n  licencePlate?: string;\r\n  insideDims?: string;\r\n  doorDims?: string;\r\n  owner?: Owner | null;\r\n  coordinator?: Coordinator | null;\r\n  driver?: Driver | null;\r\n}\r\n\r\nexport interface UpdateTruck extends Partial<CreateTruck> {\r\n  id: string;\r\n  reservedAt?: Date | null;\r\n  status?: TruckStatus;\r\n  availabilityLocation?: GeoPoint | null;\r\n  availabilityAtLocal?: Date;\r\n}\r\n\r\nexport interface Load {\r\n  id: string;\r\n  loadNumber: number;\r\n  ref?: string[];\r\n  status: LoadStatus;\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  truckDeliveryMiles?: number;\r\n  weight: string;\r\n  truckType: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  currency: string;\r\n  bookedByUser?: User;\r\n  bookedByCompany?: string;\r\n  assignTo?: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck;\r\n  bookedWith?: Customer;\r\n}\r\n\r\nexport interface CreateLoad {\r\n  status: LoadStatus;\r\n  ref?: string[];\r\n  stops: (StopPickUp | StopDelivery)[];\r\n  milesHaversine?: number;\r\n  milesByRoads?: number;\r\n  truckDeliveryMiles?: number;\r\n  weight?: string;\r\n  truckType?: TruckType[];\r\n  rate?: number;\r\n  totalCharges?: number;\r\n  profit?: number;\r\n  rpm?: number;\r\n  currency: string;\r\n  bookedByUser?: User | null;\r\n  bookedByCompany?: string;\r\n  assignTo: User[];\r\n  checkInAs?: string;\r\n  truck?: Truck | null;\r\n  bookedWith?: Customer | null;\r\n}\r\n\r\nexport interface UpdateLoad extends Partial<CreateLoad> {\r\n  id: string;\r\n}\r\n\r\nexport interface Customer {\r\n  id: string;\r\n  name: string;\r\n  type: CustomerType;\r\n  address: string;\r\n  address2?: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  phone: string;\r\n  fax?: string;\r\n  email: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface CreateCustomer {\r\n  name?: string;\r\n  type?: CustomerType;\r\n  address?: string;\r\n  address2?: string;\r\n  city?: string;\r\n  state?: string;\r\n  zipCode?: string;\r\n  phone?: string;\r\n  fax?: string;\r\n  email?: string;\r\n  website?: string;\r\n}\r\n\r\nexport interface UpdateCustomer extends Partial<CreateCustomer> {\r\n  id: string;\r\n}\r\nexport interface Facility {\r\n  id: string;\r\n  readonly name: string;\r\n  readonly address: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation: GeoPoint;\r\n}\r\n\r\nexport interface CreateFacility {\r\n  readonly name?: string;\r\n  readonly address?: string;\r\n  readonly address2?: string;\r\n  readonly facilityLocation?: GeoPoint;\r\n}\r\n\r\nexport interface UpdateFacility extends Partial<CreateFacility> {\r\n  id: string;\r\n}\r\n\r\nexport interface Location {\r\n  id: string;\r\n  zipCode: string;\r\n  name: string;\r\n  stateCode: string;\r\n  stateName: string;\r\n  location: GeoPoint;\r\n}\r\n\r\nexport type CreateLocation = Omit<Location, 'id'>;\r\n\r\nexport interface UpdateLocation extends Partial<CreateLocation> {\r\n  id: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  fullName: string;\r\n  phone?: string;\r\n  userRole: UserRole;\r\n  jobTitle: string;\r\n  email: string;\r\n}\r\n\r\nexport interface CreateUser extends Omit<User, 'id'> {\r\n  password?: string;\r\n}\r\n\r\nexport interface UpdateUser extends Partial<CreateUser> {\r\n  id: string;\r\n}\r\n\r\nexport interface File {\r\n  id: string;\r\n  filename: string;\r\n  contentType: string;\r\n  contentLength: number;\r\n  comment?: string;\r\n}\r\n\r\nexport enum StopType {\r\n  PickUp = 'PickUp',\r\n  Delivery = 'Delivery',\r\n}\r\n\r\nexport enum TimeFrameType {\r\n  FCFS = 'FCFS',\r\n  APPT = 'APPT',\r\n  ASAP = 'ASAP',\r\n  Direct = 'Direct',\r\n}\r\n\r\nexport type TimeFrameFCFS = {\r\n  type: TimeFrameType.FCFS;\r\n  from: Date | null;\r\n  to: Date | null;\r\n};\r\n\r\nexport type TimeFrameAPPT = {\r\n  type: TimeFrameType.APPT;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameASAP = {\r\n  type: TimeFrameType.ASAP;\r\n  at: Date | null;\r\n};\r\n\r\nexport type TimeFrameDirect = {\r\n  type: TimeFrameType.Direct;\r\n  at: Date | null;\r\n};\r\n\r\nexport interface StopPickUp {\r\n  stopId?: string;\r\n  type: StopType.PickUp;\r\n  status: StopPickupStatus;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameASAP;\r\n  facility: Facility | null;\r\n  freightList: Freight[];\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface StopDelivery {\r\n  stopId?: string;\r\n  type: StopType.Delivery;\r\n  status: StopDeliveryStatus;\r\n  timeFrame: TimeFrameFCFS | TimeFrameAPPT | TimeFrameDirect;\r\n  facility: Facility | null;\r\n  addInfo?: string;\r\n}\r\n\r\nexport interface Freight {\r\n  freightId?: string;\r\n  pieces: number | null;\r\n  unitOfWeight: UnitOfWeight;\r\n  weight: number | null;\r\n  unitOfLength: UnitOfLength;\r\n  length: number | null;\r\n}\r\n\r\nexport interface Push {\r\n  readonly id: string;\r\n  readonly state: PushState;\r\n  readonly to: Person;\r\n  readonly title?: string;\r\n  readonly subtitle?: string;\r\n  readonly body?: string;\r\n  readonly data?: Record<string, any>;\r\n  readonly badge?: number;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly receiptResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n\r\nexport type To = {\r\n  readonly to: Person | User;\r\n  readonly toType: EmailToType;\r\n};\r\n\r\nexport interface Email {\r\n  readonly id: string;\r\n  readonly state: EmailState;\r\n  readonly from: string;\r\n  readonly to: To[];\r\n  readonly subject: string;\r\n  readonly text: string;\r\n  readonly html?: string;\r\n  readonly sendResult?: Record<string, any>;\r\n  readonly createdAt: Date;\r\n  readonly updatedAt: Date;\r\n}\r\n","export function generateObjectId(): string {\r\n  const timestamp = Math.floor(Date.now() / 1000).toString(16);\r\n  const randomBytes = Array.from({ length: 16 }, () =>\r\n    Math.floor(Math.random() * 16).toString(16),\r\n  ).join('');\r\n  return timestamp + randomBytes.slice(0, 16);\r\n}\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');"],"names":["timeFramePickUpValidation","yup","type","oneOf","TimeFrameType","FCFS","ASAP","APPT","required","at","when","schema","undefined","from","to","timeFrameDeliveryValidation","Direct","freightValidationSchema","pieces","integer","min","unitOfWeight","UnitsOfWeight","weight","moreThan","unitOfLength","UnitsOfLength","length","stopPickUpValidationSchema","status","StopPickUpStatuses","facility","id","typeError","timeFrame","freightList","of","addInfo","stopDeliveryValidationSchema","StopDeliveryStatuses","bolList","validationSchema","LoadStatuses","ref","max","stops","val","StopType","PickUp","Delivery","truckType","TruckTypes","rate","totalCharges","currency","bookedByUser","bookedByCompany","assignTo","checkInAs","truck","nullable","bookedWith","initialTimeFramePickUpValues","initialTimeFrameDeliveryValues","initialFreightValues","getInitialStopPickUpValues","_objectSpread","freightId","generateObjectId","getInitialStopDeliveryValues","initialValues","CreateLoadForm","_ref","onClose","queryClient","useQueryClient","setSnackbarMessage","useSnackbar","mutate","isLoading","useMutation","LoadCreate","onSuccess","data","severity","message","invalidateQueries","onError","error","Error","JSON","stringify","formik","useFormik","enableReinitialize","onSubmit","values","_jsxs","Box","sx","height","children","_jsx","handleSubmit","onReset","handleReset","style","p","Divider","maxHeight","overflowX","overflowY","marginBottom","SelectField","fieldName","label","items","disabledItems","filter","TextField","multiline","maxRows","StopsForm","display","width","SelectMultiField","SearchField","getSelectedLabel","selectedItem","concat","fullName","getItemLabel","item","getItemSecondLabel","jobTitle","ListIcon","PersonIcon","entityType","queryFn","UsersQuery","orderby","order","name","FactoryIcon","CustomersQuery","truckNumber","licencePlate","LocalShippingIcon","TrucksQuery","placeholder","number","paddingBottom","paddingTop","SearchMultiField","FileList","objectId","objectType","tags","disabled","Button","fullWidth","variant","size","color","onClick","handleClose","Loader","visible","createSvgIcon","d","TimeFrameForm","formikValue","get","React","setFieldValue","paddingRight","flex","_Fragment","paddingLeft","DateTimeField","minDateTime","Date","now","FreightForm","onAdd","onRemove","removeDisabled","expanded","setExpanded","Accordion","onChange","handleExpandedChange","prev","backgroundColor","AccordionSummary","expandIcon","ArrowDropDownIcon","justifyContent","Typography","IconButton","component","padding","onClickCapture","e","stopPropagation","AddIcon","RemoveIcon","AccordionDetails","FreightListForm","map","freight","index","newValue","toSpliced","StopPickUpDriversInfoForm","freightListPath","driversInfoId","freightItems","freightIndex","value","StopPickUpDriversInfoListForm","getStatusText","StopPickUpForm","stopNumber","pickUpNumber","onUp","onDown","upDisabled","downDisabled","driversInfo","statusText","isStatusDisabled","ArrowUpwardIcon","ArrowDownwardIcon","address","WarehouseIcon","FacilitiesQuery","startEmpty","StopDeliveryDriversInfoForm","bolListPath","stopsPath","stop","flatMap","stopIndex","freightItem","includes","StopDeliveryDriversInfoListForm","StopDeliveryForm","deliveryNumber","upElement","thisElement","downElement","slice","onAddPickUp","onAddDelivery","LangPriorities","UserRoles","CustomerTypes","TruckStatuses","TruckCrossborders","TruckCertificates","TruckEquipments","Math","floor","toString","Array","random","join"],"sourceRoot":""}