{"version":3,"file":"static/js/5822.7ea4c718.chunk.js","mappings":"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","sources":["GoogleMaps/mapComponent.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\r\nimport { MarkerClusterer as MarkerClustererClass } from '@googlemaps/markerclusterer';\r\n\r\nimport Slide from '@mui/material/Slide';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Button from '@mui/material/Button';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\n\r\nimport Loader from '../components/Loader';\r\nimport { TruckQuery } from '../api';\r\nimport { useLoader, useSnackbar } from '../hooks';\r\nimport { Truck, TruckForMap } from '../utils/dataTypes';\r\nimport { getType } from '../utils/queryHelpers';\r\nimport { stopPropagation } from '../utils/stopPropagation';\r\nimport { getMapSettings, center, mapId, zoom } from '../utils/getMapSettings';\r\nimport { selectLocation } from '../utils/selectLocation';\r\nimport { toStringLocation } from '../utils/toStringLocation';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement<any, any>;\r\n  },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function MapComponent({\r\n  truckListData,\r\n}: {\r\n  truckListData: TruckForMap[];\r\n}) {\r\n  let mapCenter = center;\r\n  let mapZoom = zoom;\r\n  if (truckListData.length === 1 && truckListData[0].lastLocation) {\r\n    mapCenter = {\r\n      lat: truckListData[0].lastLocation[0],\r\n      lng: truckListData[0].lastLocation[1],\r\n    };\r\n    mapZoom = mapZoom * 2;\r\n  }\r\n\r\n  const [geocoder, setGeocoder] = React.useState<google.maps.Geocoder | null>(\r\n    null,\r\n  );\r\n  const [selectedTruckId, setSelectedTruckId] = React.useState<string>('');\r\n  const [selectedTruck, setSelectedTruck] = React.useState<Truck | null>(null);\r\n  const [isTruckLoading, setIsTruckLoading] = React.useState<boolean>(false);\r\n\r\n  const {\r\n    // isLoading: isTruckLoading,\r\n    // isFetching: isTruckFetching,\r\n    // data: truck,\r\n    refetch,\r\n  } = useQuery({\r\n    queryKey: ['truckForMap', selectedTruckId],\r\n    queryFn: TruckQuery,\r\n    keepPreviousData: true,\r\n    retry: false,\r\n    enabled: false,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!selectedTruckId) {\r\n      setSelectedTruck(null);\r\n    } else {\r\n      setIsTruckLoading(true);\r\n      const truckItem = truckListData?.find(\r\n        (truck) => truck.id === selectedTruckId,\r\n      );\r\n      const truckLocation = truckItem && truckItem?.lastLocation;\r\n\r\n      Promise.all([\r\n        refetch().then((res) => res.data),\r\n        truckLocation &&\r\n          (\r\n            geocoder?.geocode({\r\n              location: { lat: truckLocation[0], lng: truckLocation[1] },\r\n            }) || Promise.reject()\r\n          ).then((res) => {\r\n            const location = selectLocation(res.results);\r\n            if (location) {\r\n              return toStringLocation(location.address_components);\r\n            }\r\n            return '';\r\n          }),\r\n      ])\r\n        .then(([truck, location]) => {\r\n          if (truck) {\r\n            setSelectedTruck({ ...truck, lastCity: location || '' });\r\n          } else {\r\n            setSelectedTruck(null);\r\n          }\r\n        })\r\n        .catch(() => setSelectedTruck(null))\r\n        .finally(() => setIsTruckLoading(false));\r\n    }\r\n  }, [selectedTruckId]);\r\n\r\n  const handleClickOpen = (truckId: string) => {\r\n    setSelectedTruckId(truckId);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setSelectedTruckId('');\r\n  };\r\n\r\n  const handleApiLoad = (status: Status): React.ReactElement => {\r\n    const setSnackbarMessage = useSnackbar();\r\n    const [, setLoaderVisibility] = useLoader();\r\n    React.useLayoutEffect(() => {\r\n      if (status === Status.LOADING) {\r\n        setLoaderVisibility(true);\r\n      }\r\n      if (status === Status.FAILURE) {\r\n        setSnackbarMessage({\r\n          severity: 'error',\r\n          message: 'Error loading maps!',\r\n        });\r\n      }\r\n      if (status === Status.SUCCESS) {\r\n        setGeocoder(new window.google.maps.Geocoder());\r\n      }\r\n      return () => {\r\n        if (status === Status.LOADING) {\r\n          setLoaderVisibility(false);\r\n        }\r\n      };\r\n    }, [status]);\r\n    return null as unknown as React.ReactElement;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 1, height: '100%', width: '100%' }}\r\n      >\r\n        <Wrapper {...getMapSettings()} render={handleApiLoad} />\r\n        {!geocoder ? null : (\r\n          <Map center={mapCenter} zoom={mapZoom} mapId={mapId}>\r\n            <MarkerClusterer>\r\n              {truckListData.map((truck) => {\r\n                return (\r\n                  <Marker\r\n                    key={truck.id}\r\n                    onCLick={() => handleClickOpen(truck.id)}\r\n                    /*animation={window?.google?.maps?.Animation?.DROP}*/\r\n                    title={`${truck.truckNumber}\\n${truck.status}`}\r\n                    position={{\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lat: truck.lastLocation[0],\r\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                      // @ts-ignore\r\n                      lng: truck.lastLocation[1],\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n            </MarkerClusterer>\r\n          </Map>\r\n        )}\r\n      </Box>\r\n      <Dialog\r\n        open={!!selectedTruck}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDialogClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>\r\n          <span>\r\n            TRUCK NUMBER: \r\n            <a href={`./trucks/view/${selectedTruck?.id}`} target=\"_blank\">\r\n              {selectedTruck?.truckNumber}\r\n            </a>\r\n          </span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"truck-status\">\r\n            {`CURRENT STATUS: ${selectedTruck?.status}`}\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact\">\r\n            <span>\r\n              {'MAIN CONTACT: '}\r\n              <b>{`${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    getType(selectedTruck?.coordinator || selectedTruck?.owner)\r\n                  : ''\r\n              }`}</b>\r\n              {` ${\r\n                selectedTruck?.coordinator || selectedTruck?.owner\r\n                  ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                    //@ts-ignore\r\n                    (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                      .fullName\r\n                  : ''\r\n              }`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(\r\n                    ` ${\r\n                      selectedTruck?.coordinator || selectedTruck?.owner\r\n                        ? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                          //@ts-ignore\r\n                          (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                            .fullName\r\n                        : ''\r\n                    } ${\r\n                      (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                        ?.phone || ''\r\n                    }`,\r\n                  );\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"main-contact-number\">\r\n            <span>\r\n              {'MAIN CONTACT #: '}\r\n              <a\r\n                href={\r\n                  selectedTruck?.coordinator || selectedTruck?.owner\r\n                    ? `tel:${\r\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                        //@ts-ignore\r\n                        (selectedTruck?.coordinator || selectedTruck?.owner)\r\n                          .phone\r\n                      }`\r\n                    : undefined\r\n                }\r\n                target=\"_blank\"\r\n                onClick={stopPropagation}\r\n              >\r\n                {(selectedTruck?.coordinator || selectedTruck?.owner)?.phone ||\r\n                  ''}\r\n              </a>\r\n            </span>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"last-location\">\r\n            <span>\r\n              {`LAST LOCATION #: ${selectedTruck?.lastCity}`}\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={(event) => {\r\n                  stopPropagation(event);\r\n                  navigator.clipboard.writeText(`${selectedTruck?.lastCity}`);\r\n                }}\r\n              >\r\n                <ContentCopy sx={{ height: '16px', width: '16px' }} />\r\n              </IconButton>\r\n            </span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Loader visible={isTruckLoading} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Map({\r\n  center,\r\n  zoom,\r\n  mapId,\r\n  children,\r\n}: {\r\n  center: google.maps.LatLngLiteral;\r\n  zoom: number;\r\n  mapId: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const mapRef = React.useRef(null);\r\n  const [map, setMap] = React.useState<google.maps.Map>();\r\n\r\n  React.useEffect(() => {\r\n    if (mapRef.current && !map) {\r\n      setMap(\r\n        new window.google.maps.Map(mapRef.current, {\r\n          center,\r\n          zoom,\r\n          mapId,\r\n        }),\r\n      );\r\n    }\r\n  }, [mapRef, map]);\r\n\r\n  const child = React.Children.only(children);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: '100%', width: '100%' }} ref={mapRef} id=\"map\" />\r\n      {React.isValidElement(child) &&\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-ignore\r\n        React.cloneElement(child, { map })}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarkerClusterer({\r\n  map,\r\n  children,\r\n}: {\r\n  map?: google.maps.Map;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const [clusterer, setClusterer] = React.useState<MarkerClustererClass>();\r\n\r\n  React.useEffect(() => {\r\n    if (!clusterer && map) {\r\n      const newClusterer = new MarkerClustererClass({});\r\n      newClusterer.setMap(map);\r\n      setClusterer(newClusterer);\r\n    }\r\n  }, [map, clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (clusterer) {\r\n      clusterer.render();\r\n    }\r\n  }, [map, children, clusterer]);\r\n  clusterer?.render();\r\n\r\n  return (\r\n    <>\r\n      {React.Children.map(children, (child) => {\r\n        if (React.isValidElement(child)) {\r\n          // set the map prop on the child component\r\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n          // @ts-ignore\r\n          return React.cloneElement(child, { map, clusterer });\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Marker: React.FC<\r\n  google.maps.marker.AdvancedMarkerElementOptions & {\r\n    onCLick: () => void;\r\n    clusterer?: MarkerClustererClass;\r\n  }\r\n> = (options) => {\r\n  const { onCLick, clusterer, map, position, ...otherMarkerOptions } = options;\r\n  const [marker, setMarker] =\r\n    React.useState<google.maps.marker.AdvancedMarkerElement>();\r\n\r\n  React.useEffect(() => {\r\n    if (!marker) {\r\n      const newMarker = new window.google.maps.marker.AdvancedMarkerElement();\r\n      setMarker(newMarker);\r\n      newMarker.addListener('click', onCLick);\r\n    }\r\n  }, [marker]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.map = map || null;\r\n    }\r\n  }, [marker, map]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      marker.position = position;\r\n    }\r\n  }, [marker, position && `${position?.lat},${position?.lng}`]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      clusterer?.addMarker(marker, false);\r\n    }\r\n  }, [marker, clusterer]);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      Object.assign(marker, otherMarkerOptions);\r\n    }\r\n  }, [marker, otherMarkerOptions]);\r\n\r\n  return null;\r\n};\r\n"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","MapComponent","_ref","_ref4","truckListData","mapCenter","center","mapZoom","zoom","length","lastLocation","lat","lng","geocoder","setGeocoder","selectedTruckId","setSelectedTruckId","selectedTruck","setSelectedTruck","isTruckLoading","setIsTruckLoading","refetch","useQuery","queryKey","queryFn","TruckQuery","keepPreviousData","retry","enabled","truckItem","find","truck","id","truckLocation","Promise","all","then","res","data","geocode","location","reject","selectLocation","results","toStringLocation","address_components","_ref2","lastCity","catch","finally","handleDialogClose","_jsxs","_Fragment","children","Box","component","sx","flexGrow","p","height","width","Wrapper","getMapSettings","render","status","setSnackbarMessage","useSnackbar","setLoaderVisibility","useLoader","Status","LOADING","FAILURE","severity","message","SUCCESS","window","google","maps","Geocoder","Map","mapId","MarkerClusterer","map","Marker","onCLick","handleClickOpen","truckId","title","concat","truckNumber","position","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","href","target","DialogContent","DialogContentText","coordinator","owner","getType","fullName","IconButton","size","onClick","event","_ref3","stopPropagation","navigator","clipboard","writeText","phone","ContentCopy","undefined","DialogActions","Button","Loader","visible","_ref5","mapRef","setMap","current","child","only","style","_ref6","clusterer","setClusterer","newClusterer","MarkerClustererClass","options","otherMarkerOptions","_objectWithoutProperties","_excluded","marker","setMarker","newMarker","AdvancedMarkerElement","addListener","addMarker","Object","assign"],"sourceRoot":""}